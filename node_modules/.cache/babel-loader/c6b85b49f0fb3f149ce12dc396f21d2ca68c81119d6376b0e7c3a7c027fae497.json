{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kimseungwoon\\\\Desktop\\\\REACT\\\\Stock-Analysis-Ai\\\\stock-analysis-ai-react\\\\src\\\\components\\\\Header.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './Header.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Header() {\n  _s();\n  const [query, setQuery] = useState('');\n  const [results, setResults] = useState([]);\n  const [message, setMessage] = useState('');\n  const [showResults, setShowResults] = useState(false);\n  const searchContainerRef = useRef(null);\n  const IP = \"172.17.154.182:8080\";\n  useEffect(() => {\n    function handleClickOutside(event) {\n      if (searchContainerRef.current && !searchContainerRef.current.contains(event.target)) {\n        setShowResults(false);\n      }\n    }\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [searchContainerRef]);\n  useEffect(() => {\n    if (!query.trim()) {\n      setResults([]);\n      setMessage('');\n      setShowResults(false);\n      return;\n    }\n    setShowResults(true);\n    const timeoutId = setTimeout(async () => {\n      try {\n        // 검색 서버 접근\n        const apiUrl = `http://${IP}/search?q=${encodeURIComponent(query)}`;\n        console.log(`Workspaceing from: ${apiUrl}`); // 디버깅을 위해 콘솔에 URL 출력\n\n        const res = await fetch(apiUrl);\n        if (!res.ok) {\n          // 서버에서 오류 응답 시 더 자세한 정보 확인\n          const errorText = await res.text();\n          throw new Error(`네트워크 응답 오류: ${res.status} - ${errorText}`);\n        }\n        const data = await res.json(); // 응답을 JSON으로 파싱\n\n        if (data.length === 0) {\n          setResults([]);\n          setMessage('검색 결과가 없습니다.');\n        } else {\n          setResults(data);\n          setMessage('');\n        }\n      } catch (error) {\n        console.error('검색 중 오류 발생:', error);\n        setResults([]);\n        // CORS 오류 또는 네트워크 연결 실패 시 메시지 표시\n        if (error.message.includes('Failed to fetch')) {\n          setMessage('서버 연결에 실패했습니다. CORS 또는 네트워크 설정을 확인하세요.');\n        } else {\n          setMessage('검색 중 오류가 발생했습니다.');\n        }\n      }\n    }, 300); // 300ms 디바운스\n\n    return () => clearTimeout(timeoutId);\n  }, [query]);\n  const handleInputChange = e => {\n    setQuery(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"header\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      ref: searchContainerRef,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"search-input\",\n        placeholder: \"\\uD83D\\uDD0D \\uAC80\\uC0C9\",\n        value: query,\n        onChange: handleInputChange,\n        onFocus: () => query && setShowResults(true) // 검색어가 있을 때만 포커스 시 결과창 표시\n        ,\n        autoComplete: \"off\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), showResults && query.length > 0 &&\n      /*#__PURE__*/\n      // query.length > 0 조건 추가하여 빈 문자열 입력 시 결과창 안 보이도록\n      _jsxDEV(\"div\", {\n        className: \"search-results\",\n        children: [results.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: results.map((item, index) =>\n          /*#__PURE__*/\n          // 각 항목에 고유한 key를 제공하는 것이 중요합니다.\n          // item.ticker가 고유하다면 item.ticker를 사용하고, 그렇지 않다면 index를 사용합니다.\n          // 일반적으로 API 응답에는 고유 ID가 포함되어 있습니다.\n          _jsxDEV(\"li\", {\n            children: `[${item.ticker}] ${item.name} (${item.source})`\n          }, item.ticker || `result-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-message\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"login-btn\",\n      children: \"\\uB85C\\uADF8\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(Header, \"mtCYoEo8L0xCKo7iP2alsmzbLBs=\");\n_c = Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Header","_s","query","setQuery","results","setResults","message","setMessage","showResults","setShowResults","searchContainerRef","IP","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","trim","timeoutId","setTimeout","apiUrl","encodeURIComponent","console","log","res","fetch","ok","errorText","text","Error","status","data","json","length","error","includes","clearTimeout","handleInputChange","e","value","className","children","ref","placeholder","onChange","onFocus","autoComplete","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","ticker","name","source","_c","$RefreshReg$"],"sources":["C:/Users/kimseungwoon/Desktop/REACT/Stock-Analysis-Ai/stock-analysis-ai-react/src/components/Header.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './Header.css';\r\n\r\nexport default function Header() {\r\n  const [query, setQuery] = useState('');\r\n  const [results, setResults] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n  const [showResults, setShowResults] = useState(false);\r\n  const searchContainerRef = useRef(null);\r\n  const IP = \"172.17.154.182:8080\";\r\n\r\n  useEffect(() => {\r\n    function handleClickOutside(event) {\r\n      if (searchContainerRef.current && !searchContainerRef.current.contains(event.target)) {\r\n        setShowResults(false);\r\n      }\r\n    }\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, [searchContainerRef]);\r\n\r\n  useEffect(() => {\r\n    if (!query.trim()) {\r\n      setResults([]);\r\n      setMessage('');\r\n      setShowResults(false);\r\n      return;\r\n    }\r\n\r\n    setShowResults(true);\r\n\r\n    const timeoutId = setTimeout(async () => {\r\n      try {\r\n\r\n        // 검색 서버 접근\r\n        const apiUrl = `http://${IP}/search?q=${encodeURIComponent(query)}`;\r\n        console.log(`Workspaceing from: ${apiUrl}`); // 디버깅을 위해 콘솔에 URL 출력\r\n\r\n        const res = await fetch(apiUrl);\r\n        \r\n\r\n        if (!res.ok) {\r\n          // 서버에서 오류 응답 시 더 자세한 정보 확인\r\n          const errorText = await res.text();\r\n          throw new Error(`네트워크 응답 오류: ${res.status} - ${errorText}`);\r\n        }\r\n\r\n        const data = await res.json(); // 응답을 JSON으로 파싱\r\n\r\n        if (data.length === 0) {\r\n          setResults([]);\r\n          setMessage('검색 결과가 없습니다.');\r\n        } else {\r\n          setResults(data);\r\n          setMessage('');\r\n        }\r\n      } catch (error) {\r\n        console.error('검색 중 오류 발생:', error);\r\n        setResults([]);\r\n        // CORS 오류 또는 네트워크 연결 실패 시 메시지 표시\r\n        if (error.message.includes('Failed to fetch')) {\r\n            setMessage('서버 연결에 실패했습니다. CORS 또는 네트워크 설정을 확인하세요.');\r\n        } else {\r\n            setMessage('검색 중 오류가 발생했습니다.');\r\n        }\r\n      }\r\n    }, 300); // 300ms 디바운스\r\n\r\n    return () => clearTimeout(timeoutId);\r\n  }, [query]);\r\n\r\n  const handleInputChange = (e) => {\r\n    setQuery(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"search-container\" ref={searchContainerRef}>\r\n        <input\r\n          className=\"search-input\"\r\n          placeholder=\"🔍 검색\"\r\n          value={query}\r\n          onChange={handleInputChange}\r\n          onFocus={() => query && setShowResults(true)} // 검색어가 있을 때만 포커스 시 결과창 표시\r\n          autoComplete=\"off\"\r\n        />\r\n        {showResults && query.length > 0 && ( // query.length > 0 조건 추가하여 빈 문자열 입력 시 결과창 안 보이도록\r\n          <div className=\"search-results\">\r\n            {results.length > 0 && (\r\n              <ul>\r\n                {/* 서버에서 받은 데이터 구조에 맞게 key와 내용을 조정하세요 */}\r\n                {results.map((item, index) => (\r\n                  // 각 항목에 고유한 key를 제공하는 것이 중요합니다.\r\n                  // item.ticker가 고유하다면 item.ticker를 사용하고, 그렇지 않다면 index를 사용합니다.\r\n                  // 일반적으로 API 응답에는 고유 ID가 포함되어 있습니다.\r\n                  <li key={item.ticker || `result-${index}`}>\r\n                    {`[${item.ticker}] ${item.name} (${item.source})`}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            )}\r\n            {message && <div className=\"search-message\">{message}</div>}\r\n          </div>\r\n        )}\r\n      </div>\r\n      <button className=\"login-btn\">로그인</button>\r\n    </header>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}