{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kimseungwoon\\\\Desktop\\\\REACT\\\\Stock-Analysis-Ai\\\\stock-analysis-ai-react\\\\src\\\\components\\\\Header.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom'; // 1. useNavigate 훅을 import 합니다.\nimport './Header.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Header() {\n  _s();\n  const [query, setQuery] = useState('');\n  const [results, setResults] = useState([]);\n  const [message, setMessage] = useState('');\n  const [showResults, setShowResults] = useState(false);\n  const searchContainerRef = useRef(null);\n  const IP = \"172.17.154.182:8080\"; // 검색 API 서버 IP\n\n  const navigate = useNavigate(); // 2. useNavigate 훅을 초기화합니다.\n\n  useEffect(() => {\n    function handleClickOutside(event) {\n      if (searchContainerRef.current && !searchContainerRef.current.contains(event.target)) {\n        setShowResults(false);\n      }\n    }\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [searchContainerRef]);\n  useEffect(() => {\n    if (!query.trim()) {\n      setResults([]);\n      setMessage('');\n      setShowResults(false);\n      return;\n    }\n    setShowResults(true);\n    const timeoutId = setTimeout(async () => {\n      try {\n        const apiUrl = `http://${IP}/search?q=${encodeURIComponent(query)}`;\n        console.log(`검색 요청: ${apiUrl}`);\n        const res = await fetch(apiUrl);\n        if (!res.ok) {\n          const errorText = await res.text();\n          throw new Error(`네트워크 응답 오류: ${res.status} - ${errorText}`);\n        }\n        const data = await res.json();\n        if (data.length === 0) {\n          setResults([]);\n          setMessage('검색 결과가 없습니다.');\n        } else {\n          setResults(data);\n          setMessage('');\n        }\n      } catch (error) {\n        console.error('검색 중 오류 발생:', error);\n        setResults([]);\n        if (error.message.includes('Failed to fetch')) {\n          setMessage('서버 연결에 실패했습니다. CORS 또는 네트워크 설정을 확인하세요.');\n        } else {\n          setMessage('검색 중 오류가 발생했습니다.');\n        }\n      }\n    }, 300);\n    return () => clearTimeout(timeoutId);\n  }, [query, IP]); // IP 주소도 의존성 배열에 추가\n\n  const handleInputChange = e => {\n    setQuery(e.target.value);\n  };\n\n  // 3. 검색 결과 항목 클릭 시 호출될 함수를 정의합니다.\n  const handleResultClick = item => {\n    // ChartPage로 이동하면서 URL 파라미터로 ticker를, state로 종목명과 종목 소스(출처)를 전달합니다.\n    navigate(`/chart/${item.ticker}`, {\n      state: {\n        stockName: item.name,\n        // 종목명 전달\n        stockSource: item.source // 종목 출처(예: KRX, NASDAQ) 전달\n      }\n    });\n\n    // 검색창을 비우고 결과 목록을 숨깁니다.\n    setQuery('');\n    setResults([]);\n    setShowResults(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"header\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      ref: searchContainerRef,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"search-input\",\n        placeholder: \"\\uD83D\\uDD0D \\uAC80\\uC0C9\",\n        value: query,\n        onChange: handleInputChange,\n        onFocus: () => query && setShowResults(true),\n        autoComplete: \"off\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), showResults && query.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-results\",\n        children: [results.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: results.map(item =>\n          /*#__PURE__*/\n          // 4. li 요소에 onClick 이벤트를 추가하고 handleResultClick 함수를 연결합니다.\n          _jsxDEV(\"li\", {\n            onClick: () => handleResultClick(item),\n            style: {\n              cursor: 'pointer'\n            } // 클릭 가능하다는 것을 알려주기 위해 커서 스타일 추가\n            ,\n            children: `[${item.ticker}] ${item.name} (${item.source})`\n          }, item.ticker, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-message\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"login-btn\",\n      children: \"\\uB85C\\uADF8\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(Header, \"gZYpY67MU2ptNpjfa/geXQc9K6s=\", false, function () {\n  return [useNavigate];\n});\n_c = Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","jsxDEV","_jsxDEV","Header","_s","query","setQuery","results","setResults","message","setMessage","showResults","setShowResults","searchContainerRef","IP","navigate","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","trim","timeoutId","setTimeout","apiUrl","encodeURIComponent","console","log","res","fetch","ok","errorText","text","Error","status","data","json","length","error","includes","clearTimeout","handleInputChange","e","value","handleResultClick","item","ticker","state","stockName","name","stockSource","source","className","children","ref","placeholder","onChange","onFocus","autoComplete","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","style","cursor","_c","$RefreshReg$"],"sources":["C:/Users/kimseungwoon/Desktop/REACT/Stock-Analysis-Ai/stock-analysis-ai-react/src/components/Header.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom'; // 1. useNavigate 훅을 import 합니다.\r\nimport './Header.css';\r\n\r\nexport default function Header() {\r\n  const [query, setQuery] = useState('');\r\n  const [results, setResults] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n  const [showResults, setShowResults] = useState(false);\r\n  const searchContainerRef = useRef(null);\r\n  const IP = \"172.17.154.182:8080\"; // 검색 API 서버 IP\r\n\r\n  const navigate = useNavigate(); // 2. useNavigate 훅을 초기화합니다.\r\n\r\n  useEffect(() => {\r\n    function handleClickOutside(event) {\r\n      if (searchContainerRef.current && !searchContainerRef.current.contains(event.target)) {\r\n        setShowResults(false);\r\n      }\r\n    }\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, [searchContainerRef]);\r\n\r\n  useEffect(() => {\r\n    if (!query.trim()) {\r\n      setResults([]);\r\n      setMessage('');\r\n      setShowResults(false);\r\n      return;\r\n    }\r\n\r\n    setShowResults(true);\r\n\r\n    const timeoutId = setTimeout(async () => {\r\n      try {\r\n        const apiUrl = `http://${IP}/search?q=${encodeURIComponent(query)}`;\r\n        console.log(`검색 요청: ${apiUrl}`);\r\n\r\n        const res = await fetch(apiUrl);\r\n\r\n        if (!res.ok) {\r\n          const errorText = await res.text();\r\n          throw new Error(`네트워크 응답 오류: ${res.status} - ${errorText}`);\r\n        }\r\n\r\n        const data = await res.json();\r\n\r\n        if (data.length === 0) {\r\n          setResults([]);\r\n          setMessage('검색 결과가 없습니다.');\r\n        } else {\r\n          setResults(data);\r\n          setMessage('');\r\n        }\r\n      } catch (error) {\r\n        console.error('검색 중 오류 발생:', error);\r\n        setResults([]);\r\n        if (error.message.includes('Failed to fetch')) {\r\n          setMessage('서버 연결에 실패했습니다. CORS 또는 네트워크 설정을 확인하세요.');\r\n        } else {\r\n          setMessage('검색 중 오류가 발생했습니다.');\r\n        }\r\n      }\r\n    }, 300);\r\n\r\n    return () => clearTimeout(timeoutId);\r\n  }, [query, IP]); // IP 주소도 의존성 배열에 추가\r\n\r\n  const handleInputChange = (e) => {\r\n    setQuery(e.target.value);\r\n  };\r\n\r\n  // 3. 검색 결과 항목 클릭 시 호출될 함수를 정의합니다.\r\n  const handleResultClick = (item) => {\r\n    // ChartPage로 이동하면서 URL 파라미터로 ticker를, state로 종목명과 종목 소스(출처)를 전달합니다.\r\n    navigate(`/chart/${item.ticker}`, {\r\n      state: {\r\n        stockName: item.name,     // 종목명 전달\r\n        stockSource: item.source  // 종목 출처(예: KRX, NASDAQ) 전달\r\n      }\r\n    });\r\n\r\n    // 검색창을 비우고 결과 목록을 숨깁니다.\r\n    setQuery('');\r\n    setResults([]);\r\n    setShowResults(false);\r\n  };\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"search-container\" ref={searchContainerRef}>\r\n        <input\r\n          className=\"search-input\"\r\n          placeholder=\"🔍 검색\"\r\n          value={query}\r\n          onChange={handleInputChange}\r\n          onFocus={() => query && setShowResults(true)}\r\n          autoComplete=\"off\"\r\n        />\r\n        {showResults && query.length > 0 && (\r\n          <div className=\"search-results\">\r\n            {results.length > 0 && (\r\n              <ul>\r\n                {results.map((item) => (\r\n                  // 4. li 요소에 onClick 이벤트를 추가하고 handleResultClick 함수를 연결합니다.\r\n                  <li\r\n                    key={item.ticker}\r\n                    onClick={() => handleResultClick(item)}\r\n                    style={{ cursor: 'pointer' }} // 클릭 가능하다는 것을 알려주기 위해 커서 스타일 추가\r\n                  >\r\n                    {`[${item.ticker}] ${item.name} (${item.source})`}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            )}\r\n            {message && <div className=\"search-message\">{message}</div>}\r\n          </div>\r\n        )}\r\n      </div>\r\n      <button className=\"login-btn\">로그인</button>\r\n    </header>\r\n  );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAChD,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,eAAe,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAMgB,kBAAkB,GAAGd,MAAM,CAAC,IAAI,CAAC;EACvC,MAAMe,EAAE,GAAG,qBAAqB,CAAC,CAAC;;EAElC,MAAMC,QAAQ,GAAGf,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhCF,SAAS,CAAC,MAAM;IACd,SAASkB,kBAAkBA,CAACC,KAAK,EAAE;MACjC,IAAIJ,kBAAkB,CAACK,OAAO,IAAI,CAACL,kBAAkB,CAACK,OAAO,CAACC,QAAQ,CAACF,KAAK,CAACG,MAAM,CAAC,EAAE;QACpFR,cAAc,CAAC,KAAK,CAAC;MACvB;IACF;IACAS,QAAQ,CAACC,gBAAgB,CAAC,WAAW,EAAEN,kBAAkB,CAAC;IAC1D,OAAO,MAAM;MACXK,QAAQ,CAACE,mBAAmB,CAAC,WAAW,EAAEP,kBAAkB,CAAC;IAC/D,CAAC;EACH,CAAC,EAAE,CAACH,kBAAkB,CAAC,CAAC;EAExBf,SAAS,CAAC,MAAM;IACd,IAAI,CAACO,KAAK,CAACmB,IAAI,CAAC,CAAC,EAAE;MACjBhB,UAAU,CAAC,EAAE,CAAC;MACdE,UAAU,CAAC,EAAE,CAAC;MACdE,cAAc,CAAC,KAAK,CAAC;MACrB;IACF;IAEAA,cAAc,CAAC,IAAI,CAAC;IAEpB,MAAMa,SAAS,GAAGC,UAAU,CAAC,YAAY;MACvC,IAAI;QACF,MAAMC,MAAM,GAAG,UAAUb,EAAE,aAAac,kBAAkB,CAACvB,KAAK,CAAC,EAAE;QACnEwB,OAAO,CAACC,GAAG,CAAC,UAAUH,MAAM,EAAE,CAAC;QAE/B,MAAMI,GAAG,GAAG,MAAMC,KAAK,CAACL,MAAM,CAAC;QAE/B,IAAI,CAACI,GAAG,CAACE,EAAE,EAAE;UACX,MAAMC,SAAS,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,CAAC;UAClC,MAAM,IAAIC,KAAK,CAAC,eAAeL,GAAG,CAACM,MAAM,MAAMH,SAAS,EAAE,CAAC;QAC7D;QAEA,MAAMI,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,CAAC;QAE7B,IAAID,IAAI,CAACE,MAAM,KAAK,CAAC,EAAE;UACrBhC,UAAU,CAAC,EAAE,CAAC;UACdE,UAAU,CAAC,cAAc,CAAC;QAC5B,CAAC,MAAM;UACLF,UAAU,CAAC8B,IAAI,CAAC;UAChB5B,UAAU,CAAC,EAAE,CAAC;QAChB;MACF,CAAC,CAAC,OAAO+B,KAAK,EAAE;QACdZ,OAAO,CAACY,KAAK,CAAC,aAAa,EAAEA,KAAK,CAAC;QACnCjC,UAAU,CAAC,EAAE,CAAC;QACd,IAAIiC,KAAK,CAAChC,OAAO,CAACiC,QAAQ,CAAC,iBAAiB,CAAC,EAAE;UAC7ChC,UAAU,CAAC,wCAAwC,CAAC;QACtD,CAAC,MAAM;UACLA,UAAU,CAAC,kBAAkB,CAAC;QAChC;MACF;IACF,CAAC,EAAE,GAAG,CAAC;IAEP,OAAO,MAAMiC,YAAY,CAAClB,SAAS,CAAC;EACtC,CAAC,EAAE,CAACpB,KAAK,EAAES,EAAE,CAAC,CAAC,CAAC,CAAC;;EAEjB,MAAM8B,iBAAiB,GAAIC,CAAC,IAAK;IAC/BvC,QAAQ,CAACuC,CAAC,CAACzB,MAAM,CAAC0B,KAAK,CAAC;EAC1B,CAAC;;EAED;EACA,MAAMC,iBAAiB,GAAIC,IAAI,IAAK;IAClC;IACAjC,QAAQ,CAAC,UAAUiC,IAAI,CAACC,MAAM,EAAE,EAAE;MAChCC,KAAK,EAAE;QACLC,SAAS,EAAEH,IAAI,CAACI,IAAI;QAAM;QAC1BC,WAAW,EAAEL,IAAI,CAACM,MAAM,CAAE;MAC5B;IACF,CAAC,CAAC;;IAEF;IACAhD,QAAQ,CAAC,EAAE,CAAC;IACZE,UAAU,CAAC,EAAE,CAAC;IACdI,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,oBACEV,OAAA;IAAQqD,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACxBtD,OAAA;MAAKqD,SAAS,EAAC,kBAAkB;MAACE,GAAG,EAAE5C,kBAAmB;MAAA2C,QAAA,gBACxDtD,OAAA;QACEqD,SAAS,EAAC,cAAc;QACxBG,WAAW,EAAC,2BAAO;QACnBZ,KAAK,EAAEzC,KAAM;QACbsD,QAAQ,EAAEf,iBAAkB;QAC5BgB,OAAO,EAAEA,CAAA,KAAMvD,KAAK,IAAIO,cAAc,CAAC,IAAI,CAAE;QAC7CiD,YAAY,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB,CAAC,EACDtD,WAAW,IAAIN,KAAK,CAACmC,MAAM,GAAG,CAAC,iBAC9BtC,OAAA;QAAKqD,SAAS,EAAC,gBAAgB;QAAAC,QAAA,GAC5BjD,OAAO,CAACiC,MAAM,GAAG,CAAC,iBACjBtC,OAAA;UAAAsD,QAAA,EACGjD,OAAO,CAAC2D,GAAG,CAAElB,IAAI;UAAA;UAChB;UACA9C,OAAA;YAEEiE,OAAO,EAAEA,CAAA,KAAMpB,iBAAiB,CAACC,IAAI,CAAE;YACvCoB,KAAK,EAAE;cAAEC,MAAM,EAAE;YAAU,CAAE,CAAC;YAAA;YAAAb,QAAA,EAE7B,IAAIR,IAAI,CAACC,MAAM,KAAKD,IAAI,CAACI,IAAI,KAAKJ,IAAI,CAACM,MAAM;UAAG,GAJ5CN,IAAI,CAACC,MAAM;YAAAa,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAKd,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CACL,EACAxD,OAAO,iBAAIP,OAAA;UAAKqD,SAAS,EAAC,gBAAgB;UAAAC,QAAA,EAAE/C;QAAO;UAAAqD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxD,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACN/D,OAAA;MAAQqD,SAAS,EAAC,WAAW;MAAAC,QAAA,EAAC;IAAG;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpC,CAAC;AAEb;AAAC7D,EAAA,CAzHuBD,MAAM;EAAA,QAQXH,WAAW;AAAA;AAAAsE,EAAA,GARNnE,MAAM;AAAA,IAAAmE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}