{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kimseungwoon\\\\Desktop\\\\REACT\\\\Stock-Analysis-Ai\\\\stock-analysis-ai-react\\\\src\\\\Page\\\\LoginPage.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { GoogleLogin, GoogleOAuthProvider } from '@react-oauth/google';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginPage() {\n  _s();\n  const navigate = useNavigate();\n  const handleLoginSuccess = credentialResponse => {\n    console.log(credentialResponse);\n    // 로그인 성공 시 JWT 또는 credentialResponse를 백엔드로 보내 인증 처리\n    navigate('/main'); // 메인 화면으로 이동\n  };\n  const handleLoginError = () => {\n    console.log('로그인 실패');\n  };\n  return /*#__PURE__*/_jsxDEV(GoogleOAuthProvider, {\n    clientId: \"111472891391-00f7gch3d72blm7gujt008ecuvgds5qr.apps.googleusercontent.com\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uAD6C\\uAE00 \\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n        onSuccess: handleLoginSuccess,\n        onError: handleLoginError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","GoogleLogin","GoogleOAuthProvider","useNavigate","jsxDEV","_jsxDEV","LoginPage","_s","navigate","handleLoginSuccess","credentialResponse","console","log","handleLoginError","clientId","children","fileName","_jsxFileName","lineNumber","columnNumber","onSuccess","onError","_c","$RefreshReg$"],"sources":["C:/Users/kimseungwoon/Desktop/REACT/Stock-Analysis-Ai/stock-analysis-ai-react/src/Page/LoginPage.jsx"],"sourcesContent":["import React from 'react';\r\nimport { GoogleLogin, GoogleOAuthProvider } from '@react-oauth/google';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction LoginPage() {\r\n  const navigate = useNavigate();\r\n\r\n  const handleLoginSuccess = (credentialResponse) => {\r\n    console.log(credentialResponse);\r\n    // 로그인 성공 시 JWT 또는 credentialResponse를 백엔드로 보내 인증 처리\r\n    navigate('/main'); // 메인 화면으로 이동\r\n  };\r\n\r\n  const handleLoginError = () => {\r\n    console.log('로그인 실패');\r\n  };\r\n\r\n  return (\r\n    <GoogleOAuthProvider clientId=\"111472891391-00f7gch3d72blm7gujt008ecuvgds5qr.apps.googleusercontent.com\">\r\n      <div>\r\n        <h2>구글 로그인</h2>\r\n        <GoogleLogin\r\n          onSuccess={handleLoginSuccess}\r\n          onError={handleLoginError}\r\n        />\r\n      </div>\r\n    </GoogleOAuthProvider>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,mBAAmB,QAAQ,qBAAqB;AACtE,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAE9B,MAAMM,kBAAkB,GAAIC,kBAAkB,IAAK;IACjDC,OAAO,CAACC,GAAG,CAACF,kBAAkB,CAAC;IAC/B;IACAF,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;EACrB,CAAC;EAED,MAAMK,gBAAgB,GAAGA,CAAA,KAAM;IAC7BF,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;EACvB,CAAC;EAED,oBACEP,OAAA,CAACH,mBAAmB;IAACY,QAAQ,EAAC,0EAA0E;IAAAC,QAAA,eACtGV,OAAA;MAAAU,QAAA,gBACEV,OAAA;QAAAU,QAAA,EAAI;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACfd,OAAA,CAACJ,WAAW;QACVmB,SAAS,EAAEX,kBAAmB;QAC9BY,OAAO,EAAER;MAAiB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAE1B;AAACZ,EAAA,CAxBQD,SAAS;EAAA,QACCH,WAAW;AAAA;AAAAmB,EAAA,GADrBhB,SAAS;AA0BlB,eAAeA,SAAS;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}