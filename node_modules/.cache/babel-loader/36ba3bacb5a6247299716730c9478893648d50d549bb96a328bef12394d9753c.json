{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kimseungwoon\\\\Desktop\\\\REACT\\\\Stock-Analysis-Ai\\\\stock-analysis-ai-react\\\\src\\\\components\\\\StockTable.jsx\",\n  _s = $RefreshSig$();\n// StockTable.jsx\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport \"./StockTable.css\";\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function StockTable() {\n  _s();\n  const [currentPage, setCurrentPage] = useState(1);\n  const [allChartData, setAllChartData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentChangeRankData, setCurrentChangeRankData] = useState([]);\n  const [sortTypeForChangeRank, setSortTypeForChangeRank] = useState('initial');\n  const [selectedMarket, setSelectedMarket] = useState('KR'); // 'KR' or 'US'\n\n  const ITEMS_PER_PAGE = 10;\n  const CHANGE_RANK_ITEMS_COUNT = 10;\n  const IP = \"172.17.154.173:8080\"; // IP 주소는 환경변수 등으로 관리하는 것이 좋습니다.\n\n  const navigate = useNavigate();\n  const fetchChartData = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    setAllChartData([]); // 데이터 초기화\n    setCurrentChangeRankData([]); // 변동순 데이터도 초기화\n\n    const marketPath = selectedMarket.toLowerCase(); // 'kr' or 'us'\n\n    try {\n      const listResponse = await fetch(`http://${IP}/recommend/${marketPath}`);\n      if (!listResponse.ok) {\n        throw new Error(`종목 목록 로딩 실패 (${selectedMarket}): ${listResponse.status}`);\n      }\n      const initialStockList = await listResponse.json();\n      if (!Array.isArray(initialStockList) || initialStockList.length === 0) {\n        console.log(`추천 종목 목록이 비어있습니다 (${selectedMarket}).`);\n        setLoading(false);\n        return;\n      }\n      const detailPromises = initialStockList.map(async stock => {\n        if (!stock.ticker || !stock.stock_name) {\n          console.warn(\"종목 목록 데이터에 ticker 또는 stock_name이 없습니다:\", stock);\n          return {\n            name: stock.stock_name || \"이름 없음\",\n            ticker: stock.ticker || \"티커 없음\",\n            price: \"N/A\",\n            change: 0.0,\n            logo: `http://${IP}/logo/${marketPath}/${stock.ticker || 'default'}`\n          };\n        }\n        try {\n          const detailResponse = await fetch(`http://${IP}/changerate/${marketPath}/${stock.ticker}`);\n          if (!detailResponse.ok) {\n            console.warn(`티커 ${stock.ticker} (${selectedMarket}) 상세 정보 로딩 실패: ${detailResponse.status}`);\n            return {\n              name: stock.stock_name,\n              ticker: stock.ticker,\n              price: \"N/A\",\n              change: 0.0,\n              logo: `http://${IP}/logo/${marketPath}/${stock.ticker}`\n            };\n          }\n          const details = await detailResponse.json();\n          return {\n            name: stock.stock_name,\n            ticker: stock.ticker,\n            price: typeof details.yesterday_close === 'number' ? details.yesterday_close : \"N/A\",\n            change: typeof details.change_rate === 'number' ? details.change_rate : 0.0,\n            logo: `http://${IP}/logo/${marketPath}/${stock.ticker}`\n          };\n        } catch (e) {\n          console.error(`티커 ${stock.ticker} (${selectedMarket}) 상세 정보 fetch 또는 처리 중 오류:`, e);\n          return {\n            name: stock.stock_name,\n            ticker: stock.ticker,\n            price: \"N/A\",\n            change: 0.0,\n            logo: `http://${IP}/logo/${marketPath}/${stock.ticker}`\n          };\n        }\n      });\n      const combinedDataResults = await Promise.allSettled(detailPromises);\n      const finalChartData = combinedDataResults.filter(result => result.status === 'fulfilled').map(result => result.value);\n      setAllChartData(finalChartData);\n      if (finalChartData.length > 0) {\n        const initiallySortedChangeData = [...finalChartData].sort((a, b) => Math.abs(b.change) - Math.abs(a.change)).slice(0, CHANGE_RANK_ITEMS_COUNT);\n        setCurrentChangeRankData(initiallySortedChangeData);\n      }\n      setSortTypeForChangeRank('initial');\n    } catch (e) {\n      console.error(`차트 데이터 로딩 중 전체 오류 발생 (${selectedMarket}):`, e);\n      setError(`데이터 로딩 실패 (${selectedMarket}): ${e.message}`);\n    } finally {\n      setLoading(false);\n    }\n  }, [IP, CHANGE_RANK_ITEMS_COUNT, selectedMarket]); // selectedMarket을 의존성 배열에 추가\n\n  useEffect(() => {\n    fetchChartData();\n  }, [fetchChartData]); // selectedMarket이 변경되면 fetchChartData가 재생성되고, 이 useEffect가 실행됨\n\n  // 시장 변경 핸들러\n  const handleMarketChange = market => {\n    if (selectedMarket !== market) {\n      setCurrentPage(1); // 페이지를 1로 초기화\n      setSelectedMarket(market); // 시장 상태 변경 -> useEffect 트리거\n    }\n  };\n\n  // 변동순 정렬 함수 (selectedMarket에 따라 동작 변경 필요 없음, allChartData 기반이므로)\n  const handleSortChangeRank = type => {\n    if (!allChartData || allChartData.length === 0) {\n      console.log(\"정렬할 차트 데이터가 없습니다.\");\n      setCurrentChangeRankData([]);\n      setSortTypeForChangeRank(type);\n      return;\n    }\n    let sortedData = [...allChartData];\n    if (type === 'gainers') {\n      sortedData.sort((a, b) => b.change - a.change);\n    } else if (type === 'losers') {\n      sortedData.sort((a, b) => a.change - b.change);\n    } else {\n      sortedData.sort((a, b) => Math.abs(b.change) - Math.abs(a.change));\n    }\n    setCurrentChangeRankData(sortedData.slice(0, CHANGE_RANK_ITEMS_COUNT));\n    setSortTypeForChangeRank(type);\n  };\n  const totalPages = Math.ceil(allChartData.length / ITEMS_PER_PAGE);\n  const startIndex = (currentPage - 1) * ITEMS_PER_PAGE;\n  const endIndex = startIndex + ITEMS_PER_PAGE;\n  const currentChartPageData = allChartData.slice(startIndex, endIndex);\n  const handleFavoriteClick = (e, stockName) => {\n    e.stopPropagation();\n    console.log(`${stockName} (${selectedMarket}) 찜 상태 변경됨`); // 시장 정보 추가\n  };\n  const handlePageChange = page => {\n    if (page === 'prev') setCurrentPage(prev => Math.max(prev - 1, 1));else if (page === 'next') setCurrentPage(prev => Math.min(prev + 1, totalPages));else setCurrentPage(page);\n  };\n  const handleStockRowClick = stock => {\n    if (stock && stock.ticker && stock.ticker !== \"티커 없음\" && stock.ticker !== \"오류\") {\n      const priceToSend = typeof stock.price === 'number' ? stock.price : \"N/A\";\n      const changeToSend = typeof stock.change === 'number' ? stock.change : 0.0;\n      // navigate 시 market 정보도 함께 넘기거나, detail 페이지에서 market을 알 수 있는 방법이 필요할 수 있습니다.\n      // 여기서는 일단 ticker만 넘깁니다.\n      navigate(`/chart/${stock.ticker}`, {\n        // URL에 market 정보를 포함하는 것도 고려해볼 수 있습니다. 예: /chart/${selectedMarket}/${stock.ticker}\n        state: {\n          stockName: stock.name,\n          stockPrice: priceToSend,\n          stockChange: changeToSend,\n          market: selectedMarket // 상세 페이지에서 시장 정보를 활용할 수 있도록 전달\n        }\n      });\n    } else {\n      console.warn(\"유효하지 않은 종목 정보로 차트 페이지로 이동할 수 없습니다:\", stock);\n    }\n  };\n  const renderPageNumbers = () => {\n    const pageNumbers = [];\n    const maxPagesToShow = 5;\n    if (totalPages <= maxPagesToShow + 1) {\n      for (let i = 1; i <= totalPages; i++) pageNumbers.push(/*#__PURE__*/_jsxDEV(\"button\", {\n        className: i === currentPage ? 'active' : '',\n        onClick: () => handlePageChange(i),\n        children: i\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 68\n      }, this));\n    } else {\n      let startPage = Math.max(1, currentPage - Math.floor(maxPagesToShow / 2));\n      let endPage = Math.min(totalPages, startPage + maxPagesToShow - 1);\n      if (endPage === totalPages) startPage = Math.max(1, totalPages - maxPagesToShow + 1);\n      if (startPage > 1) {\n        pageNumbers.push(/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handlePageChange(1),\n          children: \"1\"\n        }, 1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 34\n        }, this));\n        if (startPage > 2) pageNumbers.push(/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"...\"\n        }, \"start-ellipsis\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 53\n        }, this));\n      }\n      for (let i = startPage; i <= endPage; i++) pageNumbers.push(/*#__PURE__*/_jsxDEV(\"button\", {\n        className: i === currentPage ? 'active' : '',\n        onClick: () => handlePageChange(i),\n        children: i\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 73\n      }, this));\n      if (endPage < totalPages) {\n        if (endPage < totalPages - 1) pageNumbers.push(/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"...\"\n        }, \"end-ellipsis\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 64\n        }, this));\n        pageNumbers.push(/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handlePageChange(totalPages),\n          children: totalPages\n        }, totalPages, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 34\n        }, this));\n      }\n    }\n    return pageNumbers;\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stock-table loading\",\n    children: \"\\uB370\\uC774\\uD130\\uB97C \\uBD88\\uB7EC\\uC624\\uB294 \\uC911\\uC785\\uB2C8\\uB2E4...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stock-table error\",\n    children: [\"\\uC624\\uB958: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 23\n  }, this);\n  if (!allChartData || allChartData.length === 0 && !loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stock-table\",\n    children: [\"\\uD45C\\uC2DC\\uD560 \\uB370\\uC774\\uD130\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4 (\", selectedMarket, \").\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 72\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stock-table\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\uCC28\\uD2B8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-rank-controls\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleMarketChange('KR'),\n              className: selectedMarket === 'KR' ? 'active-sort' : '',\n              children: \"KR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleMarketChange('US'),\n              className: selectedMarket === 'US' ? 'active-sort' : '',\n              children: \"US\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"rank-header\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\uC885\\uBAA9\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\uD604\\uC7AC\\uAC00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\uB4F1\\uB77D\\uB960\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"favorite-header\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: currentChartPageData.map((stock, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"stock-row\",\n              onClick: () => handleStockRowClick(stock),\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"rank-cell\",\n                children: (currentPage - 1) * ITEMS_PER_PAGE + index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"stock-name-cell\",\n                children: [stock.ticker && stock.ticker !== \"티커 없음\" && stock.ticker !== \"오류\" && /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: stock.logo // fetch 시 이미 marketPath가 적용된 logo URL 사용\n                  ,\n                  alt: `${stock.name} 로고`,\n                  className: \"stock-logo\",\n                  onError: e => {\n                    e.target.style.display = 'none';\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: stock.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: typeof stock.price === 'number' ? `${stock.price.toLocaleString('ko-KR')}원` // US 데이터의 경우 $ 표시 등 추가 форматирование 고려\n                : stock.price\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: stock.change >= 0 ? \"positive\" : \"negative\",\n                children: [stock.change >= 0 ? '+' : '', stock.change.toFixed(1), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"favorite-cell\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"favorite-icon\",\n                  onClick: e => handleFavoriteClick(e, stock.name),\n                  title: `${stock.name} 찜하기`,\n                  children: \"\\u2665\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 37\n              }, this)]\n            }, `${selectedMarket}-${stock.ticker}` || `${selectedMarket}-${stock.name}-${index}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }, this), totalPages > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pagination-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handlePageChange('prev'),\n            disabled: currentPage === 1,\n            children: \"<\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 29\n          }, this), renderPageNumbers(), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handlePageChange('next'),\n            disabled: currentPage === totalPages,\n            children: \">\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vertical-line\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"change-rank\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"change-rank-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"title-2\",\n            children: [\"\\uBCC0\\uB3D9 \\uC21C (\", selectedMarket, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 25\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"change-rank-controls\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleSortChangeRank('gainers'),\n              className: sortTypeForChangeRank === 'gainers' ? 'active-sort' : '',\n              children: \"\\uC0C1\\uC2B9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleSortChangeRank('losers'),\n              className: sortTypeForChangeRank === 'losers' ? 'active-sort' : '',\n              children: \"\\uD558\\uB77D\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\uC885\\uBAA9\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\uB4F1\\uB77D\\uB960\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 44\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"favorite-header\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 56\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: currentChangeRankData.map((stock, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"stock-row\",\n              onClick: () => handleStockRowClick(stock),\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"stock-name-cell\",\n                children: [stock.ticker && /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: stock.logo // fetch 시 이미 marketPath가 적용된 logo URL 사용\n                  ,\n                  alt: `${stock.name} 로고`,\n                  className: \"stock-logo\",\n                  onError: e => {\n                    e.target.style.display = 'none';\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: stock.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: stock.change >= 0 ? \"positive\" : \"negative\",\n                children: [stock.change >= 0 ? '+' : '', stock.change.toFixed(1), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"favorite-cell\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"favorite-icon\",\n                  onClick: e => handleFavoriteClick(e, stock.name),\n                  title: `${stock.name} 찜하기`,\n                  children: \"\\u2665\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 37\n              }, this)]\n            }, `${selectedMarket}-rank-${stock.ticker}` || `${selectedMarket}-rank-${stock.name}-${index}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 9\n  }, this);\n}\n_s(StockTable, \"FtthfnRxn6knE9TAusfzzQDbYrg=\", false, function () {\n  return [useNavigate];\n});\n_c = StockTable;\nvar _c;\n$RefreshReg$(_c, \"StockTable\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","jsxDEV","_jsxDEV","StockTable","_s","currentPage","setCurrentPage","allChartData","setAllChartData","loading","setLoading","error","setError","currentChangeRankData","setCurrentChangeRankData","sortTypeForChangeRank","setSortTypeForChangeRank","selectedMarket","setSelectedMarket","ITEMS_PER_PAGE","CHANGE_RANK_ITEMS_COUNT","IP","navigate","fetchChartData","marketPath","toLowerCase","listResponse","fetch","ok","Error","status","initialStockList","json","Array","isArray","length","console","log","detailPromises","map","stock","ticker","stock_name","warn","name","price","change","logo","detailResponse","details","yesterday_close","change_rate","e","combinedDataResults","Promise","allSettled","finalChartData","filter","result","value","initiallySortedChangeData","sort","a","b","Math","abs","slice","message","handleMarketChange","market","handleSortChangeRank","type","sortedData","totalPages","ceil","startIndex","endIndex","currentChartPageData","handleFavoriteClick","stockName","stopPropagation","handlePageChange","page","prev","max","min","handleStockRowClick","priceToSend","changeToSend","state","stockPrice","stockChange","renderPageNumbers","pageNumbers","maxPagesToShow","i","push","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","startPage","floor","endPage","index","src","alt","onError","target","style","display","toLocaleString","toFixed","title","disabled","_c","$RefreshReg$"],"sources":["C:/Users/kimseungwoon/Desktop/REACT/Stock-Analysis-Ai/stock-analysis-ai-react/src/components/StockTable.jsx"],"sourcesContent":["// StockTable.jsx\r\nimport React, { useState, useEffect, useCallback } from \"react\";\r\nimport \"./StockTable.css\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport default function StockTable() {\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [allChartData, setAllChartData] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    const [currentChangeRankData, setCurrentChangeRankData] = useState([]);\r\n    const [sortTypeForChangeRank, setSortTypeForChangeRank] = useState('initial');\r\n\r\n    const [selectedMarket, setSelectedMarket] = useState('KR'); // 'KR' or 'US'\r\n\r\n    const ITEMS_PER_PAGE = 10;\r\n    const CHANGE_RANK_ITEMS_COUNT = 10;\r\n    const IP = \"172.17.154.173:8080\"; // IP 주소는 환경변수 등으로 관리하는 것이 좋습니다.\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const fetchChartData = useCallback(async () => {\r\n        setLoading(true);\r\n        setError(null);\r\n        setAllChartData([]); // 데이터 초기화\r\n        setCurrentChangeRankData([]); // 변동순 데이터도 초기화\r\n\r\n        const marketPath = selectedMarket.toLowerCase(); // 'kr' or 'us'\r\n\r\n        try {\r\n            const listResponse = await fetch(`http://${IP}/recommend/${marketPath}`);\r\n            if (!listResponse.ok) {\r\n                throw new Error(`종목 목록 로딩 실패 (${selectedMarket}): ${listResponse.status}`);\r\n            }\r\n            const initialStockList = await listResponse.json();\r\n\r\n            if (!Array.isArray(initialStockList) || initialStockList.length === 0) {\r\n                console.log(`추천 종목 목록이 비어있습니다 (${selectedMarket}).`);\r\n                setLoading(false);\r\n                return;\r\n            }\r\n\r\n            const detailPromises = initialStockList.map(async (stock) => {\r\n                if (!stock.ticker || !stock.stock_name) {\r\n                    console.warn(\"종목 목록 데이터에 ticker 또는 stock_name이 없습니다:\", stock);\r\n                    return {\r\n                        name: stock.stock_name || \"이름 없음\",\r\n                        ticker: stock.ticker || \"티커 없음\",\r\n                        price: \"N/A\",\r\n                        change: 0.0,\r\n                        logo: `http://${IP}/logo/${marketPath}/${stock.ticker || 'default'}`\r\n                    };\r\n                }\r\n                try {\r\n                    const detailResponse = await fetch(`http://${IP}/changerate/${marketPath}/${stock.ticker}`);\r\n                    if (!detailResponse.ok) {\r\n                        console.warn(`티커 ${stock.ticker} (${selectedMarket}) 상세 정보 로딩 실패: ${detailResponse.status}`);\r\n                        return {\r\n                            name: stock.stock_name,\r\n                            ticker: stock.ticker,\r\n                            price: \"N/A\",\r\n                            change: 0.0,\r\n                            logo: `http://${IP}/logo/${marketPath}/${stock.ticker}`\r\n                        };\r\n                    }\r\n                    const details = await detailResponse.json();\r\n                    return {\r\n                        name: stock.stock_name,\r\n                        ticker: stock.ticker,\r\n                        price: typeof details.yesterday_close === 'number' ? details.yesterday_close : \"N/A\",\r\n                        change: typeof details.change_rate === 'number' ? details.change_rate : 0.0,\r\n                        logo: `http://${IP}/logo/${marketPath}/${stock.ticker}`,\r\n                    };\r\n                } catch (e) {\r\n                    console.error(`티커 ${stock.ticker} (${selectedMarket}) 상세 정보 fetch 또는 처리 중 오류:`, e);\r\n                    return {\r\n                        name: stock.stock_name,\r\n                        ticker: stock.ticker,\r\n                        price: \"N/A\",\r\n                        change: 0.0,\r\n                        logo: `http://${IP}/logo/${marketPath}/${stock.ticker}`\r\n                    };\r\n                }\r\n            });\r\n\r\n            const combinedDataResults = await Promise.allSettled(detailPromises);\r\n            const finalChartData = combinedDataResults\r\n                .filter(result => result.status === 'fulfilled')\r\n                .map(result => result.value);\r\n\r\n            setAllChartData(finalChartData);\r\n\r\n            if (finalChartData.length > 0) {\r\n                const initiallySortedChangeData = [...finalChartData]\r\n                    .sort((a, b) => Math.abs(b.change) - Math.abs(a.change))\r\n                    .slice(0, CHANGE_RANK_ITEMS_COUNT);\r\n                setCurrentChangeRankData(initiallySortedChangeData);\r\n            }\r\n            setSortTypeForChangeRank('initial');\r\n\r\n        } catch (e) {\r\n            console.error(`차트 데이터 로딩 중 전체 오류 발생 (${selectedMarket}):`, e);\r\n            setError(`데이터 로딩 실패 (${selectedMarket}): ${e.message}`);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [IP, CHANGE_RANK_ITEMS_COUNT, selectedMarket]); // selectedMarket을 의존성 배열에 추가\r\n\r\n    useEffect(() => {\r\n        fetchChartData();\r\n    }, [fetchChartData]); // selectedMarket이 변경되면 fetchChartData가 재생성되고, 이 useEffect가 실행됨\r\n\r\n    // 시장 변경 핸들러\r\n    const handleMarketChange = (market) => {\r\n        if (selectedMarket !== market) {\r\n            setCurrentPage(1); // 페이지를 1로 초기화\r\n            setSelectedMarket(market); // 시장 상태 변경 -> useEffect 트리거\r\n        }\r\n    };\r\n\r\n    // 변동순 정렬 함수 (selectedMarket에 따라 동작 변경 필요 없음, allChartData 기반이므로)\r\n    const handleSortChangeRank = (type) => {\r\n        if (!allChartData || allChartData.length === 0) {\r\n            console.log(\"정렬할 차트 데이터가 없습니다.\");\r\n            setCurrentChangeRankData([]);\r\n            setSortTypeForChangeRank(type);\r\n            return;\r\n        }\r\n        let sortedData = [...allChartData];\r\n        if (type === 'gainers') {\r\n            sortedData.sort((a, b) => b.change - a.change);\r\n        } else if (type === 'losers') {\r\n            sortedData.sort((a, b) => a.change - b.change);\r\n        } else {\r\n            sortedData.sort((a, b) => Math.abs(b.change) - Math.abs(a.change));\r\n        }\r\n        setCurrentChangeRankData(sortedData.slice(0, CHANGE_RANK_ITEMS_COUNT));\r\n        setSortTypeForChangeRank(type);\r\n    };\r\n\r\n    const totalPages = Math.ceil(allChartData.length / ITEMS_PER_PAGE);\r\n    const startIndex = (currentPage - 1) * ITEMS_PER_PAGE;\r\n    const endIndex = startIndex + ITEMS_PER_PAGE;\r\n    const currentChartPageData = allChartData.slice(startIndex, endIndex);\r\n\r\n    const handleFavoriteClick = (e, stockName) => {\r\n        e.stopPropagation();\r\n        console.log(`${stockName} (${selectedMarket}) 찜 상태 변경됨`); // 시장 정보 추가\r\n    };\r\n\r\n    const handlePageChange = (page) => {\r\n        if (page === 'prev') setCurrentPage((prev) => Math.max(prev - 1, 1));\r\n        else if (page === 'next') setCurrentPage((prev) => Math.min(prev + 1, totalPages));\r\n        else setCurrentPage(page);\r\n    };\r\n\r\n    const handleStockRowClick = (stock) => {\r\n        if (stock && stock.ticker && stock.ticker !== \"티커 없음\" && stock.ticker !== \"오류\") {\r\n            const priceToSend = typeof stock.price === 'number' ? stock.price : \"N/A\";\r\n            const changeToSend = typeof stock.change === 'number' ? stock.change : 0.0;\r\n            // navigate 시 market 정보도 함께 넘기거나, detail 페이지에서 market을 알 수 있는 방법이 필요할 수 있습니다.\r\n            // 여기서는 일단 ticker만 넘깁니다.\r\n            navigate(`/chart/${stock.ticker}`, { // URL에 market 정보를 포함하는 것도 고려해볼 수 있습니다. 예: /chart/${selectedMarket}/${stock.ticker}\r\n                state: {\r\n                    stockName: stock.name,\r\n                    stockPrice: priceToSend,\r\n                    stockChange: changeToSend,\r\n                    market: selectedMarket // 상세 페이지에서 시장 정보를 활용할 수 있도록 전달\r\n                }\r\n            });\r\n        } else {\r\n            console.warn(\"유효하지 않은 종목 정보로 차트 페이지로 이동할 수 없습니다:\", stock);\r\n        }\r\n    };\r\n\r\n    const renderPageNumbers = () => {\r\n        const pageNumbers = [];\r\n        const maxPagesToShow = 5;\r\n        if (totalPages <= maxPagesToShow + 1) {\r\n            for (let i = 1; i <= totalPages; i++) pageNumbers.push(<button key={i} className={i === currentPage ? 'active' : ''} onClick={() => handlePageChange(i)}>{i}</button>);\r\n        } else {\r\n            let startPage = Math.max(1, currentPage - Math.floor(maxPagesToShow / 2));\r\n            let endPage = Math.min(totalPages, startPage + maxPagesToShow - 1);\r\n            if (endPage === totalPages) startPage = Math.max(1, totalPages - maxPagesToShow + 1);\r\n            if (startPage > 1) {\r\n                pageNumbers.push(<button key={1} onClick={() => handlePageChange(1)}>1</button>);\r\n                if (startPage > 2) pageNumbers.push(<span key=\"start-ellipsis\">...</span>);\r\n            }\r\n            for (let i = startPage; i <= endPage; i++) pageNumbers.push(<button key={i} className={i === currentPage ? 'active' : ''} onClick={() => handlePageChange(i)}>{i}</button>);\r\n            if (endPage < totalPages) {\r\n                if (endPage < totalPages - 1) pageNumbers.push(<span key=\"end-ellipsis\">...</span>);\r\n                pageNumbers.push(<button key={totalPages} onClick={() => handlePageChange(totalPages)}>{totalPages}</button>);\r\n            }\r\n        }\r\n        return pageNumbers;\r\n    };\r\n\r\n    if (loading) return <div className=\"stock-table loading\">데이터를 불러오는 중입니다...</div>;\r\n    if (error) return <div className=\"stock-table error\">오류: {error}</div>;\r\n    if (!allChartData || allChartData.length === 0 && !loading) return <div className=\"stock-table\">표시할 데이터가 없습니다 ({selectedMarket}).</div>;\r\n\r\n\r\n    return (\r\n        <div className=\"stock-table\">\r\n            <div className=\"table-container\">\r\n                <div className=\"chart-table\">\r\n                    <div className=\"chart-header\">\r\n                        <h2>차트</h2>\r\n                        <div className=\"chart-rank-controls\">\r\n                            <button\r\n                                onClick={() => handleMarketChange('KR')}\r\n                                className={selectedMarket === 'KR' ? 'active-sort' : ''}\r\n                            >\r\n                                KR\r\n                            </button>\r\n                            <button\r\n                                onClick={() => handleMarketChange('US')}\r\n                                className={selectedMarket === 'US' ? 'active-sort' : ''}\r\n                            >\r\n                                US\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    {/* 테이블을 감싸던 div는 이전 단계에서 제거되었거나, \r\n                        만약 아직 있다면 여기서도 chart-table 자체가 스크롤 컨테이너가 되도록 CSS와 함께 조정 필요.\r\n                        현재 CSS에서는 .chart-table > div:has(> table) 에 스크롤이 적용되어 있습니다.\r\n                        만약 chart-table 전체를 스크롤하려면 해당 CSS를 수정하고, 이 div를 제거해야 합니다.\r\n                        여기서는 이미 chart-table 전체가 스크롤되도록 CSS가 수정되었다고 가정하고,\r\n                        아래 div style={{ flexGrow: 1, overflowY: 'auto', position: 'relative' }} 은 제거합니다.\r\n                    */}\r\n                    <table> {/* 이 테이블이 chart-table의 직접적인 자식이 되도록 합니다. */}\r\n                        <thead>\r\n                            <tr>\r\n                                <th className=\"rank-header\"></th>\r\n                                <th>종목</th>\r\n                                <th>현재가</th>\r\n                                <th>등락률</th>\r\n                                <th className=\"favorite-header\"></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {currentChartPageData.map((stock, index) => (\r\n                                <tr key={`${selectedMarket}-${stock.ticker}` || `${selectedMarket}-${stock.name}-${index}`} className=\"stock-row\" onClick={() => handleStockRowClick(stock)}>\r\n                                    <td className=\"rank-cell\">{(currentPage - 1) * ITEMS_PER_PAGE + index + 1}</td>\r\n                                    <td className=\"stock-name-cell\">\r\n                                        {stock.ticker && stock.ticker !== \"티커 없음\" && stock.ticker !== \"오류\" && (\r\n                                            <img\r\n                                                src={stock.logo} // fetch 시 이미 marketPath가 적용된 logo URL 사용\r\n                                                alt={`${stock.name} 로고`}\r\n                                                className=\"stock-logo\"\r\n                                                onError={(e) => { e.target.style.display = 'none'; }}\r\n                                            />\r\n                                        )}\r\n                                        <span>{stock.name}</span>\r\n                                    </td>\r\n                                    <td>\r\n                                        {typeof stock.price === 'number'\r\n                                            ? `${stock.price.toLocaleString('ko-KR')}원` // US 데이터의 경우 $ 표시 등 추가 форматирование 고려\r\n                                            : stock.price}\r\n                                    </td>\r\n                                    <td className={stock.change >= 0 ? \"positive\" : \"negative\"}>\r\n                                        {stock.change >= 0 ? '+' : ''}{stock.change.toFixed(1)}%\r\n                                    </td>\r\n                                    <td className=\"favorite-cell\">\r\n                                        <span className=\"favorite-icon\" onClick={(e) => handleFavoriteClick(e, stock.name)} title={`${stock.name} 찜하기`}>♥</span>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                    {totalPages > 1 && (\r\n                        <div className=\"pagination-controls\">\r\n                            <button onClick={() => handlePageChange('prev')} disabled={currentPage === 1}>&lt;</button>\r\n                            {renderPageNumbers()}\r\n                            <button onClick={() => handlePageChange('next')} disabled={currentPage === totalPages}>&gt;</button>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n\r\n                <div className=\"vertical-line\"></div>\r\n\r\n                <div className=\"change-rank\">\r\n                    <div className=\"change-rank-header\">\r\n                        <h2 className=\"title-2\">변동 순 ({selectedMarket})</h2> {/* 변동순 헤더에도 시장 표시 */}\r\n                        <div className=\"change-rank-controls\">\r\n                            <button\r\n                                onClick={() => handleSortChangeRank('gainers')}\r\n                                className={sortTypeForChangeRank === 'gainers' ? 'active-sort' : ''}\r\n                            >\r\n                                상승\r\n                            </button>\r\n                            <button\r\n                                onClick={() => handleSortChangeRank('losers')}\r\n                                className={sortTypeForChangeRank === 'losers' ? 'active-sort' : ''}\r\n                            >\r\n                                하락\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <table>\r\n                        <thead>\r\n                            <tr><th>종목</th><th>등락률</th><th className=\"favorite-header\"></th></tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {currentChangeRankData.map((stock, index) => (\r\n                                <tr key={`${selectedMarket}-rank-${stock.ticker}` || `${selectedMarket}-rank-${stock.name}-${index}`} className=\"stock-row\" onClick={() => handleStockRowClick(stock)}>\r\n                                    <td className=\"stock-name-cell\">\r\n                                        {stock.ticker && (\r\n                                            <img\r\n                                                src={stock.logo} // fetch 시 이미 marketPath가 적용된 logo URL 사용\r\n                                                alt={`${stock.name} 로고`}\r\n                                                className=\"stock-logo\"\r\n                                                onError={(e) => { e.target.style.display = 'none'; }}\r\n                                            />\r\n                                        )}\r\n                                        <span>{stock.name}</span>\r\n                                    </td>\r\n                                    <td className={stock.change >= 0 ? \"positive\" : \"negative\"}>\r\n                                        {stock.change >= 0 ? '+' : ''}{stock.change.toFixed(1)}%\r\n                                    </td>\r\n                                    <td className=\"favorite-cell\">\r\n                                        <span className=\"favorite-icon\" onClick={(e) => handleFavoriteClick(e, stock.name)} title={`${stock.name} 찜하기`}>♥</span>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}