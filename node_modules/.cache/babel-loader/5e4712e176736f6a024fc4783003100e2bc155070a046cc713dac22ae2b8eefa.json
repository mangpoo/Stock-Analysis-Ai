{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kimseungwoon\\\\Desktop\\\\REACT\\\\Stock-Analysis-Ai\\\\stock-analysis-ai-react\\\\src\\\\components\\\\ChartSection.jsx\",\n  _s = $RefreshSig$();\n// ChartSection.jsx\nimport React, { useState } from 'react';\nimport './ChartSection.css'; // ChartSection.css에 positive/negative 스타일이 정의되어 있다고 가정\n\n// formatDate 함수 (사용되지 않으므로 유지하거나 필요시 제거)\n// const formatDate = (date) => {\n//   const year = date.getFullYear();\n//   const month = (date.getMonth() + 1).toString().padStart(2, '0');\n//   const day = date.getDate().toString().padStart(2, '0');\n//   return `${year}${month}${day}`;\n// };\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChartSection({\n  ticker,\n  stockName,\n  stockPrice,\n  stockChange,\n  logoUrl,\n  chartServerIp\n}) {\n  _s();\n  const [summaries, setSummaries] = useState([]);\n  const [isLoadingSummaries, setIsLoadingSummaries] = useState(false);\n  const [summaryError, setSummaryError] = useState(null);\n\n  // Flask API 서버의 기본 URL을 정확하게 설정해야 합니다.\n  const apiServerBaseUrl = 'http://minjun0410.iptime.org:5000';\n  const handleChartAnalysis = () => {\n    console.log(`차트 분석 버튼 클릭됨: ${ticker}`);\n  };\n  const handleNewsSummary = async () => {\n    if (!ticker) {\n      setSummaryError(\"종목 코드가 없습니다.\");\n      return;\n    }\n    console.log(`뉴스 요약 요청 시작: ${ticker}`);\n    setIsLoadingSummaries(true);\n    setSummaryError(null);\n    setSummaries([]);\n    try {\n      // 1. /crawler/<ticker> API를 호출하여 뉴스 ID가 포함된 경로 목록을 가져옵니다.\n      const crawlerResponse = await fetch(`${apiServerBaseUrl}/crawler/${ticker}`);\n      if (!crawlerResponse.ok) {\n        const errorData = await crawlerResponse.text(); // 또는 .json() 시도\n        throw new Error(`뉴스 목록을 가져오는데 실패했습니다: ${crawlerResponse.status} ${crawlerResponse.statusText} - ${errorData}`);\n      }\n      const newsIdPathsObject = await crawlerResponse.json();\n      // newsIdPathsObject의 값들을 가져오면, 콘솔 로그상 [ ['path1', 'path2', ...] ] 형태의 배열이 될 수 있습니다.\n      const arraysOfPaths = Object.values(newsIdPathsObject);\n\n      // 실제 처리해야 할 경로 문자열 배열은 arraysOfPaths의 첫 번째 요소라고 가정합니다.\n      // (콘솔 로그에서 Array(1)로 나왔으므로, arraysOfPaths[0]에 실제 경로 배열이 있음)\n      const actualNewsIdPaths = arraysOfPaths.length > 0 && Array.isArray(arraysOfPaths[0]) ? arraysOfPaths[0] : [];\n      if (actualNewsIdPaths.length === 0) {\n        console.log(\"요약할 뉴스가 없습니다. (경로 목록이 비어있거나 형식이 올바르지 않음)\");\n        // 이 시점에서 사용자에게 \"요약할 뉴스가 없습니다\"라는 메시지를 summaries나 별도 state에 설정하여 UI에 표시할 수 있습니다.\n        // 예: setSummaries([{ type: 'no_news', message: '요약할 뉴스가 없습니다.' }]); \n        setIsLoadingSummaries(false);\n        return;\n      }\n      console.log(\"가져온 뉴스 경로 목록 (처리 대상):\", actualNewsIdPaths);\n\n      // 2. 각 경로 문자열에서 ID를 추출하고, 해당 ID로 /getSummary/<id> API를 호출합니다.\n      const summaryPromises = actualNewsIdPaths.map(pathString => {\n        // 이제 pathString은 개별 경로 문자열 (예: \"minjun0410.iptime.org:5000/getSummary/000270_202505091133\")\n        if (typeof pathString !== 'string') {\n          console.warn(\"경로 목록에 문자열이 아닌 요소가 포함되어 있습니다:\", pathString);\n          return Promise.resolve(null); // 유효하지 않은 항목은 건너뜁니다.\n        }\n        const pathParts = pathString.split('/');\n        const newsId = pathParts[pathParts.length - 1];\n        if (!newsId || newsId.trim() === \"\") {\n          console.warn(\"잘못된 형식의 뉴스 ID 경로:\", pathString);\n          return Promise.resolve(null);\n        }\n        const fullSummaryUrl = `${apiServerBaseUrl}/getSummary/${newsId}`;\n        console.log(`요약 요청 URL: ${fullSummaryUrl}`);\n        return fetch(fullSummaryUrl).then(async res => {\n          // async 추가하여 에러 시 응답 바디 읽기\n          if (!res.ok) {\n            const errorBody = await res.text(); // 또는 .json() 시도\n            console.error(`ID [${newsId}]에 대한 요약을 가져오는데 실패했습니다: ${res.status} ${res.statusText} - ${errorBody}`);\n            return null; // 개별 요청 실패 시 null 반환\n          }\n          return res.json();\n        }).catch(err => {\n          console.error(`ID [${newsId}] 요청 중 네트워크 또는 기타 오류:`, err);\n          return null;\n        });\n      });\n\n      // 모든 요약 요청이 완료될 때까지 기다린 후, null이 아닌 결과만 필터링합니다.\n      const fetchedSummaries = (await Promise.all(summaryPromises)).filter(summary => summary !== null);\n      setSummaries(fetchedSummaries);\n      console.log(\"최종적으로 가져온 뉴스 요약:\", fetchedSummaries);\n      if (fetchedSummaries.length === 0 && actualNewsIdPaths.length > 0) {\n        // 뉴스는 있었으나 모두 요약에 실패한 경우 또는 요약 결과가 비어있는 경우\n        console.log(\"모든 뉴스 항목을 요약하지 못했거나, 요약 결과가 비어있습니다.\");\n        // 이 경우에도 사용자에게 메시지를 표시할 수 있습니다.\n        // 예: setSummaries([{ type: 'empty_summary', message: '뉴스 요약 정보를 가져왔으나 내용이 없습니다.' }]);\n      }\n    } catch (error) {\n      console.error(\"뉴스 요약 처리 중 최상위 오류:\", error);\n      setSummaryError(error.message);\n    } finally {\n      setIsLoadingSummaries(false);\n    }\n  };\n  const handleOtherAction = () => {\n    console.log(`다른 기능 버튼 클릭됨: ${ticker}`);\n  };\n\n  // 차트 관련 설정 (기존 코드 유지)\n  // const today = new Date();\n  const startDate = \"20000101\";\n  const endDate = \"20250423\"; // 실제 사용시에는 이 날짜를 동적으로 관리하는 것이 좋습니다.\n  const chartIframeSrc = `http://${chartServerIp}/chart/kr/${ticker}/${startDate}/${endDate}`;\n  if (!ticker) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-section\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uC885\\uBAA9 \\uC815\\uBCF4\\uB97C \\uBD88\\uB7EC\\uC62C \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4. \\uBAA9\\uB85D\\uC5D0\\uC11C \\uC885\\uBAA9\\uC744 \\uC120\\uD0DD\\uD574\\uC8FC\\uC138\\uC694.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this);\n  }\n  const changeClassName = stockChange >= 0 ? \"positive\" : \"negative\";\n  const changeText = `${stockChange >= 0 ? '+' : ''}${typeof stockChange === 'number' ? stockChange.toFixed(1) : 'N/A'}%`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-header-info\",\n      children: [logoUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logoUrl,\n        alt: `${stockName || '종목'} 로고`,\n        className: \"image-placeholder\",\n        onError: e => {\n          e.target.style.display = 'none';\n          const parent = e.target.parentNode;\n          if (parent && parent.classList.contains('image-placeholder')) {\n            parent.textContent = '로고';\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-placeholder\",\n        children: \"\\uB85C\\uACE0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stock-info-text\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stock-name\",\n          children: stockName || ticker\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stock-price-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stock-price\",\n            children: stockPrice\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), typeof stockChange === 'number' && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `stock-change ${changeClassName}`,\n            style: {\n              marginLeft: '8px'\n            },\n            children: changeText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-layout-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-iframe-container\",\n        children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n          // ticker가 변경될 때마다 iframe을 새로 로드하도록 key 추가\n          className: \"chart-iframe\",\n          src: chartIframeSrc,\n          title: `${stockName || ticker} Stock Chart`\n        }, ticker, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"AI \\uBD84\\uC11D (\", stockName || ticker, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleChartAnalysis,\n          children: \"\\uCC28\\uD2B8 \\uBD84\\uC11D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNewsSummary,\n          disabled: isLoadingSummaries,\n          children: isLoadingSummaries ? '요약 정보 로딩 중...' : '뉴스 요약'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleOtherAction,\n          children: \"\\uB2E4\\uB978 \\uAE30\\uB2A5 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), isLoadingSummaries && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uB274\\uC2A4 \\uC694\\uC57D \\uC815\\uBCF4\\uB97C \\uBD88\\uB7EC\\uC624\\uB294 \\uC911\\uC785\\uB2C8\\uB2E4...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 30\n    }, this), summaryError && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: [\"\\uC624\\uB958: \", summaryError]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 24\n    }, this), !isLoadingSummaries && summaries.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"news-summaries-section\",\n      style: {\n        marginTop: '20px',\n        padding: '10px',\n        border: '1px solid #eee'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"\\uB274\\uC2A4 \\uC694\\uC57D \\uACB0\\uACFC (\", stockName || ticker, \"):\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this), summaries.map((summary, index) => summary ?\n      /*#__PURE__*/\n      // summary 객체가 유효한지 확인\n      // summary.type에 따라 다른 렌더링을 할 수도 있습니다. (예: 'no_news', 'empty_summary')\n      // 지금은 정상적인 요약 객체만 있다고 가정합니다.\n      _jsxDEV(\"div\", {\n        style: {\n          marginBottom: '15px',\n          paddingBottom: '10px',\n          borderBottom: '1px solid #ddd'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: summary.title || '제목 없음'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\uB0A0\\uC9DC:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 20\n          }, this), \" \", summary.date || '정보 없음']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\uC8FC\\uC694 \\uC774\\uC288:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 20\n          }, this), \" \", summary.issue || '정보 없음']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\uC601\\uD5A5:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 20\n          }, this), \" \", summary.impact || '정보 없음']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 17\n        }, this), summary.link && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: summary.link,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: \"\\uC6D0\\uBCF8 \\uAE30\\uC0AC \\uBCF4\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 34\n        }, this), summary.related_tickers && summary.related_tickers.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\uAD00\\uB828 \\uD2F0\\uCEE4:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 22\n          }, this), \" \", summary.related_tickers.join(', ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 19\n        }, this)]\n      }, summary.link || index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uC774 \\uD56D\\uBAA9\\uC5D0 \\uB300\\uD55C \\uC694\\uC57D \\uC815\\uBCF4\\uB97C \\uAC00\\uC838\\uC624\\uC9C0 \\uBABB\\uD588\\uC2B5\\uB2C8\\uB2E4.\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 15\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }, this), !isLoadingSummaries && !summaryError && summaries.length === 0 && ticker &&\n    /*#__PURE__*/\n    // 이 부분은 사용자가 '뉴스 요약' 버튼을 클릭한 *후에* summaries가 비어있고 에러도 없을 때 표시될 내용입니다.\n    // 예를 들어, handleNewsSummary 내부에서 \"요약할 뉴스가 없습니다\" 와 같은 상황에\n    // summaries 상태를 빈 배열로 설정했으므로, 이 조건에 해당될 수 있습니다.\n    // 여기에 명시적인 메시지를 추가할 수 있습니다.\n    // <div style={{ marginTop: '10px' }}>요청하신 종목에 대한 뉴스 요약 정보가 없습니다.</div>\n    // 현재는 빈 div로 유지합니다. 주석 처리된 로직 참고.\n    _jsxDEV(\"div\", {\n      style: {\n        marginTop: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n}\n_s(ChartSection, \"IznVeKW6yR9wRLBEQg7ykxIj4FM=\");\n_c = ChartSection;\nvar _c;\n$RefreshReg$(_c, \"ChartSection\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ChartSection","ticker","stockName","stockPrice","stockChange","logoUrl","chartServerIp","_s","summaries","setSummaries","isLoadingSummaries","setIsLoadingSummaries","summaryError","setSummaryError","apiServerBaseUrl","handleChartAnalysis","console","log","handleNewsSummary","crawlerResponse","fetch","ok","errorData","text","Error","status","statusText","newsIdPathsObject","json","arraysOfPaths","Object","values","actualNewsIdPaths","length","Array","isArray","summaryPromises","map","pathString","warn","Promise","resolve","pathParts","split","newsId","trim","fullSummaryUrl","then","res","errorBody","error","catch","err","fetchedSummaries","all","filter","summary","message","handleOtherAction","startDate","endDate","chartIframeSrc","className","children","fileName","_jsxFileName","lineNumber","columnNumber","changeClassName","changeText","toFixed","src","alt","onError","e","target","style","display","parent","parentNode","classList","contains","textContent","marginLeft","title","onClick","disabled","color","marginTop","padding","border","index","marginBottom","paddingBottom","borderBottom","date","issue","impact","link","href","rel","related_tickers","join","_c","$RefreshReg$"],"sources":["C:/Users/kimseungwoon/Desktop/REACT/Stock-Analysis-Ai/stock-analysis-ai-react/src/components/ChartSection.jsx"],"sourcesContent":["// ChartSection.jsx\r\nimport React, { useState } from 'react';\r\nimport './ChartSection.css'; // ChartSection.css에 positive/negative 스타일이 정의되어 있다고 가정\r\n\r\n// formatDate 함수 (사용되지 않으므로 유지하거나 필요시 제거)\r\n// const formatDate = (date) => {\r\n//   const year = date.getFullYear();\r\n//   const month = (date.getMonth() + 1).toString().padStart(2, '0');\r\n//   const day = date.getDate().toString().padStart(2, '0');\r\n//   return `${year}${month}${day}`;\r\n// };\r\n\r\nexport default function ChartSection({ ticker, stockName, stockPrice, stockChange, logoUrl, chartServerIp }) {\r\n  const [summaries, setSummaries] = useState([]);\r\n  const [isLoadingSummaries, setIsLoadingSummaries] = useState(false);\r\n  const [summaryError, setSummaryError] = useState(null);\r\n\r\n  // Flask API 서버의 기본 URL을 정확하게 설정해야 합니다.\r\n  const apiServerBaseUrl = 'http://minjun0410.iptime.org:5000';\r\n\r\n  const handleChartAnalysis = () => {\r\n    console.log(`차트 분석 버튼 클릭됨: ${ticker}`);\r\n  };\r\n\r\n  const handleNewsSummary = async () => {\r\n    if (!ticker) {\r\n      setSummaryError(\"종목 코드가 없습니다.\");\r\n      return;\r\n    }\r\n\r\n    console.log(`뉴스 요약 요청 시작: ${ticker}`);\r\n    setIsLoadingSummaries(true);\r\n    setSummaryError(null);\r\n    setSummaries([]);\r\n\r\n    try {\r\n      // 1. /crawler/<ticker> API를 호출하여 뉴스 ID가 포함된 경로 목록을 가져옵니다.\r\n      const crawlerResponse = await fetch(`${apiServerBaseUrl}/crawler/${ticker}`);\r\n      if (!crawlerResponse.ok) {\r\n        const errorData = await crawlerResponse.text(); // 또는 .json() 시도\r\n        throw new Error(`뉴스 목록을 가져오는데 실패했습니다: ${crawlerResponse.status} ${crawlerResponse.statusText} - ${errorData}`);\r\n      }\r\n      \r\n      const newsIdPathsObject = await crawlerResponse.json();\r\n      // newsIdPathsObject의 값들을 가져오면, 콘솔 로그상 [ ['path1', 'path2', ...] ] 형태의 배열이 될 수 있습니다.\r\n      const arraysOfPaths = Object.values(newsIdPathsObject); \r\n\r\n      // 실제 처리해야 할 경로 문자열 배열은 arraysOfPaths의 첫 번째 요소라고 가정합니다.\r\n      // (콘솔 로그에서 Array(1)로 나왔으므로, arraysOfPaths[0]에 실제 경로 배열이 있음)\r\n      const actualNewsIdPaths = arraysOfPaths.length > 0 && Array.isArray(arraysOfPaths[0]) ? arraysOfPaths[0] : [];\r\n\r\n      if (actualNewsIdPaths.length === 0) {\r\n        console.log(\"요약할 뉴스가 없습니다. (경로 목록이 비어있거나 형식이 올바르지 않음)\");\r\n        // 이 시점에서 사용자에게 \"요약할 뉴스가 없습니다\"라는 메시지를 summaries나 별도 state에 설정하여 UI에 표시할 수 있습니다.\r\n        // 예: setSummaries([{ type: 'no_news', message: '요약할 뉴스가 없습니다.' }]); \r\n        setIsLoadingSummaries(false);\r\n        return;\r\n      }\r\n\r\n      console.log(\"가져온 뉴스 경로 목록 (처리 대상):\", actualNewsIdPaths);\r\n\r\n      // 2. 각 경로 문자열에서 ID를 추출하고, 해당 ID로 /getSummary/<id> API를 호출합니다.\r\n      const summaryPromises = actualNewsIdPaths.map(pathString => {\r\n        // 이제 pathString은 개별 경로 문자열 (예: \"minjun0410.iptime.org:5000/getSummary/000270_202505091133\")\r\n        if (typeof pathString !== 'string') {\r\n            console.warn(\"경로 목록에 문자열이 아닌 요소가 포함되어 있습니다:\", pathString);\r\n            return Promise.resolve(null); // 유효하지 않은 항목은 건너뜁니다.\r\n        }\r\n\r\n        const pathParts = pathString.split('/');\r\n        const newsId = pathParts[pathParts.length - 1];\r\n\r\n        if (!newsId || newsId.trim() === \"\") {\r\n          console.warn(\"잘못된 형식의 뉴스 ID 경로:\", pathString);\r\n          return Promise.resolve(null);\r\n        }\r\n        \r\n        const fullSummaryUrl = `${apiServerBaseUrl}/getSummary/${newsId}`;\r\n        console.log(`요약 요청 URL: ${fullSummaryUrl}`);\r\n\r\n        return fetch(fullSummaryUrl)\r\n          .then(async res => { // async 추가하여 에러 시 응답 바디 읽기\r\n            if (!res.ok) {\r\n              const errorBody = await res.text(); // 또는 .json() 시도\r\n              console.error(`ID [${newsId}]에 대한 요약을 가져오는데 실패했습니다: ${res.status} ${res.statusText} - ${errorBody}`);\r\n              return null; // 개별 요청 실패 시 null 반환\r\n            }\r\n            return res.json();\r\n          })\r\n          .catch(err => {\r\n            console.error(`ID [${newsId}] 요청 중 네트워크 또는 기타 오류:`, err);\r\n            return null;\r\n          });\r\n      });\r\n\r\n      // 모든 요약 요청이 완료될 때까지 기다린 후, null이 아닌 결과만 필터링합니다.\r\n      const fetchedSummaries = (await Promise.all(summaryPromises)).filter(summary => summary !== null);\r\n      \r\n      setSummaries(fetchedSummaries);\r\n      console.log(\"최종적으로 가져온 뉴스 요약:\", fetchedSummaries);\r\n      if (fetchedSummaries.length === 0 && actualNewsIdPaths.length > 0) {\r\n        // 뉴스는 있었으나 모두 요약에 실패한 경우 또는 요약 결과가 비어있는 경우\r\n        console.log(\"모든 뉴스 항목을 요약하지 못했거나, 요약 결과가 비어있습니다.\");\r\n        // 이 경우에도 사용자에게 메시지를 표시할 수 있습니다.\r\n        // 예: setSummaries([{ type: 'empty_summary', message: '뉴스 요약 정보를 가져왔으나 내용이 없습니다.' }]);\r\n      }\r\n\r\n\r\n    } catch (error) {\r\n      console.error(\"뉴스 요약 처리 중 최상위 오류:\", error);\r\n      setSummaryError(error.message);\r\n    } finally {\r\n      setIsLoadingSummaries(false);\r\n    }\r\n  };\r\n\r\n  const handleOtherAction = () => {\r\n    console.log(`다른 기능 버튼 클릭됨: ${ticker}`);\r\n  };\r\n\r\n  // 차트 관련 설정 (기존 코드 유지)\r\n  // const today = new Date();\r\n  const startDate = \"20000101\";\r\n  const endDate = \"20250423\"; // 실제 사용시에는 이 날짜를 동적으로 관리하는 것이 좋습니다.\r\n  const chartIframeSrc = `http://${chartServerIp}/chart/kr/${ticker}/${startDate}/${endDate}`;\r\n\r\n  if (!ticker) {\r\n    return (\r\n      <div className=\"chart-section\">\r\n        <p>종목 정보를 불러올 수 없습니다. 목록에서 종목을 선택해주세요.</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const changeClassName = stockChange >= 0 ? \"positive\" : \"negative\";\r\n  const changeText = `${stockChange >= 0 ? '+' : ''}${typeof stockChange === 'number' ? stockChange.toFixed(1) : 'N/A'}%`;\r\n\r\n  return (\r\n    <div className=\"chart-section\">\r\n      <div className=\"chart-header-info\">\r\n        {logoUrl ? (\r\n          <img\r\n            src={logoUrl}\r\n            alt={`${stockName || '종목'} 로고`}\r\n            className=\"image-placeholder\"\r\n            onError={(e) => {\r\n              e.target.style.display = 'none';\r\n              const parent = e.target.parentNode;\r\n              if (parent && parent.classList.contains('image-placeholder')) {\r\n                parent.textContent = '로고';\r\n              }\r\n            }}\r\n          />\r\n        ) : (\r\n          <div className=\"image-placeholder\">로고</div>\r\n        )}\r\n        <div className=\"stock-info-text\">\r\n          <span className=\"stock-name\">{stockName || ticker}</span>\r\n          <div className=\"stock-price-details\">\r\n            <span className=\"stock-price\">{stockPrice}</span>\r\n            {typeof stockChange === 'number' && (\r\n              <span className={`stock-change ${changeClassName}`} style={{ marginLeft: '8px' }}>\r\n                {changeText}\r\n              </span>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"chart-layout-container\">\r\n        <div className=\"chart-iframe-container\">\r\n          <iframe\r\n            key={ticker} // ticker가 변경될 때마다 iframe을 새로 로드하도록 key 추가\r\n            className=\"chart-iframe\"\r\n            src={chartIframeSrc}\r\n            title={`${stockName || ticker} Stock Chart`}\r\n          ></iframe>\r\n        </div>\r\n        <div className=\"chart-controls\">\r\n          <h3>AI 분석 ({stockName || ticker})</h3>\r\n          <button onClick={handleChartAnalysis}>차트 분석</button>\r\n          <button onClick={handleNewsSummary} disabled={isLoadingSummaries}>\r\n            {isLoadingSummaries ? '요약 정보 로딩 중...' : '뉴스 요약'}\r\n          </button>\r\n          <button onClick={handleOtherAction}>다른 기능 2</button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* 뉴스 요약 결과 표시 부분 */}\r\n      {isLoadingSummaries && <p>뉴스 요약 정보를 불러오는 중입니다...</p>}\r\n      {summaryError && <p style={{ color: 'red' }}>오류: {summaryError}</p>}\r\n      {!isLoadingSummaries && summaries.length > 0 && (\r\n        <div className=\"news-summaries-section\" style={{ marginTop: '20px', padding: '10px', border: '1px solid #eee' }}>\r\n          <h4>뉴스 요약 결과 ({stockName || ticker}):</h4>\r\n          {summaries.map((summary, index) => (\r\n            summary ? ( // summary 객체가 유효한지 확인\r\n              // summary.type에 따라 다른 렌더링을 할 수도 있습니다. (예: 'no_news', 'empty_summary')\r\n              // 지금은 정상적인 요약 객체만 있다고 가정합니다.\r\n              <div key={summary.link || index} style={{ marginBottom: '15px', paddingBottom: '10px', borderBottom: '1px solid #ddd' }}>\r\n                <h5>{summary.title || '제목 없음'}</h5>\r\n                <p><strong>날짜:</strong> {summary.date || '정보 없음'}</p>\r\n                <p><strong>주요 이슈:</strong> {summary.issue || '정보 없음'}</p>\r\n                <p><strong>영향:</strong> {summary.impact || '정보 없음'}</p>\r\n                {summary.link && <p><a href={summary.link} target=\"_blank\" rel=\"noopener noreferrer\">원본 기사 보기</a></p>}\r\n                {summary.related_tickers && summary.related_tickers.length > 0 && (\r\n                  <p><strong>관련 티커:</strong> {summary.related_tickers.join(', ')}</p>\r\n                )}\r\n              </div>\r\n            ) : (\r\n              <p key={index}>이 항목에 대한 요약 정보를 가져오지 못했습니다.</p>\r\n            )\r\n          ))}\r\n        </div>\r\n      )}\r\n      {!isLoadingSummaries && !summaryError && summaries.length === 0 && ticker && (\r\n          // 이 부분은 사용자가 '뉴스 요약' 버튼을 클릭한 *후에* summaries가 비어있고 에러도 없을 때 표시될 내용입니다.\r\n          // 예를 들어, handleNewsSummary 내부에서 \"요약할 뉴스가 없습니다\" 와 같은 상황에\r\n          // summaries 상태를 빈 배열로 설정했으므로, 이 조건에 해당될 수 있습니다.\r\n          // 여기에 명시적인 메시지를 추가할 수 있습니다.\r\n          // <div style={{ marginTop: '10px' }}>요청하신 종목에 대한 뉴스 요약 정보가 없습니다.</div>\r\n          // 현재는 빈 div로 유지합니다. 주석 처리된 로직 참고.\r\n         <div style={{ marginTop: '10px' }}>\r\n           {/* 이 메시지는 handleNewsSummary 함수에서 newsIdPaths.length === 0 일 때 또는 summaries가 비어있을 때 표시될 수 있습니다.\r\n               버튼이 클릭된 후 로딩이 끝났는데 summaries가 비어있고 에러도 없을 경우를 위한 메시지*/}\r\n         </div>\r\n      )}\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}