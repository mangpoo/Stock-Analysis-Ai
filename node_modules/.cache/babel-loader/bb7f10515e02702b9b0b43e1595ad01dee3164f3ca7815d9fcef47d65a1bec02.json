{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kimseungwoon\\\\Desktop\\\\REACT\\\\Stock-Analysis-Ai\\\\stock-analysis-ai-react\\\\src\\\\components\\\\ChartSection.jsx\",\n  _s = $RefreshSig$();\n// ChartSection.jsx\nimport React, { useState } from 'react';\nimport './ChartSection.css'; // ChartSection.css에 positive/negative 스타일이 정의되어 있다고 가정\n\n// formatDate 함수 (사용되지 않으므로 유지하거나 필요시 제거)\n// const formatDate = (date) => {\n//   const year = date.getFullYear();\n//   const month = (date.getMonth() + 1).toString().padStart(2, '0');\n//   const day = date.getDate().toString().padStart(2, '0');\n//   return `${year}${month}${day}`;\n// };\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChartSection({\n  ticker,\n  stockName,\n  stockPrice,\n  stockChange,\n  logoUrl,\n  chartServerIp\n}) {\n  _s();\n  const [summaries, setSummaries] = useState([]);\n  const [isLoadingSummaries, setIsLoadingSummaries] = useState(false);\n  const [summaryError, setSummaryError] = useState(null);\n\n  // Flask API 서버의 기본 URL을 정확하게 설정해야 합니다.\n  const apiServerBaseUrl = 'http://minjun0410.iptime.org:5000';\n  const handleChartAnalysis = () => {\n    console.log(`차트 분석 버튼 클릭됨: ${ticker}`);\n  };\n  const handleNewsSummary = async () => {\n    if (!ticker) {\n      setSummaryError(\"종목 코드가 없습니다.\");\n      return;\n    }\n    console.log(`뉴스 요약 요청 시작: ${ticker}`);\n    setIsLoadingSummaries(true);\n    setSummaryError(null);\n    setSummaries([]);\n    try {\n      // 1. /crawler/<ticker> API를 호출하여 뉴스 ID가 포함된 경로 목록을 가져옵니다.\n      const crawlerResponse = await fetch(`${apiServerBaseUrl}/crawler/${ticker}`);\n      if (!crawlerResponse.ok) {\n        const errorData = await crawlerResponse.text(); // 또는 .json() 시도\n        throw new Error(`뉴스 목록을 가져오는데 실패했습니다: ${crawlerResponse.status} ${crawlerResponse.statusText} - ${errorData}`);\n      }\n      // 응답 예시: { \"0\": \"minjun0410.iptime.org:5000/getSummary/ID1\", \"1\": \"...\" }\n      const newsIdPathsObject = await crawlerResponse.json();\n      const newsIdPaths = Object.values(newsIdPathsObject); // 경로 문자열 배열로 변환\n\n      if (newsIdPaths.length === 0) {\n        console.log(\"요약할 뉴스가 없습니다.\");\n        setIsLoadingSummaries(false);\n        return;\n      }\n      console.log(\"가져온 뉴스 경로 목록:\", newsIdPaths);\n\n      // 2. 각 경로 문자열에서 ID를 추출하고, 해당 ID로 /getSummary/<id> API를 호출합니다.\n      const summaryPromises = newsIdPaths.map(pathString => {\n        // pathString 예시: \"minjun0410.iptime.org:5000/getSummary/000270_202505091133\"\n        // 여기서 마지막 부분인 뉴스 ID (예: \"000270_202505091133\")를 추출합니다.\n        const pathParts = pathString.split('/');\n        const newsId = pathParts[pathParts.length - 1];\n        if (!newsId || newsId.trim() === \"\") {\n          console.warn(\"잘못된 형식의 뉴스 ID 경로:\", pathString);\n          return Promise.resolve(null); // 유효하지 않은 ID는 건너뜁니다.\n        }\n\n        // 추출한 newsId를 사용하여 뉴스 요약 정보를 가져오기 위한 전체 URL을 구성합니다.\n        const fullSummaryUrl = `${apiServerBaseUrl}/getSummary/${newsId}`;\n        console.log(`요약 요청 URL: ${fullSummaryUrl}`);\n        return fetch(fullSummaryUrl).then(async res => {\n          // async 추가하여 에러 시 응답 바디 읽기\n          if (!res.ok) {\n            const errorBody = await res.text(); // 또는 .json() 시도\n            console.error(`ID [${newsId}]에 대한 요약을 가져오는데 실패했습니다: ${res.status} ${res.statusText} - ${errorBody}`);\n            return null; // 개별 요청 실패 시 null 반환\n          }\n          return res.json();\n        }).catch(err => {\n          console.error(`ID [${newsId}] 요청 중 네트워크 또는 기타 오류:`, err);\n          return null;\n        });\n      });\n\n      // 모든 요약 요청이 완료될 때까지 기다린 후, null이 아닌 결과만 필터링합니다.\n      const fetchedSummaries = (await Promise.all(summaryPromises)).filter(summary => summary !== null);\n      setSummaries(fetchedSummaries);\n      console.log(\"최종적으로 가져온 뉴스 요약:\", fetchedSummaries);\n    } catch (error) {\n      console.error(\"뉴스 요약 처리 중 최상위 오류:\", error);\n      setSummaryError(error.message);\n    } finally {\n      setIsLoadingSummaries(false);\n    }\n  };\n  const handleOtherAction = () => {\n    console.log(`다른 기능 버튼 클릭됨: ${ticker}`);\n  };\n\n  // 차트 관련 설정 (기존 코드 유지)\n  // const today = new Date();\n  const startDate = \"20000101\";\n  const endDate = \"20250423\";\n  const chartIframeSrc = `http://${chartServerIp}/chart/kr/${ticker}/${startDate}/${endDate}`;\n  if (!ticker) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-section\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uC885\\uBAA9 \\uC815\\uBCF4\\uB97C \\uBD88\\uB7EC\\uC62C \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4. \\uBAA9\\uB85D\\uC5D0\\uC11C \\uC885\\uBAA9\\uC744 \\uC120\\uD0DD\\uD574\\uC8FC\\uC138\\uC694.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this);\n  }\n  const changeClassName = stockChange >= 0 ? \"positive\" : \"negative\";\n  const changeText = `${stockChange >= 0 ? '+' : ''}${typeof stockChange === 'number' ? stockChange.toFixed(1) : 'N/A'}%`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-header-info\",\n      children: [logoUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logoUrl,\n        alt: `${stockName || '종목'} 로고`,\n        className: \"image-placeholder\",\n        onError: e => {\n          e.target.style.display = 'none';\n          const parent = e.target.parentNode;\n          if (parent && parent.classList.contains('image-placeholder')) {\n            parent.textContent = '로고';\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-placeholder\",\n        children: \"\\uB85C\\uACE0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stock-info-text\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stock-name\",\n          children: stockName || ticker\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stock-price-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stock-price\",\n            children: stockPrice\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), typeof stockChange === 'number' && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `stock-change ${changeClassName}`,\n            style: {\n              marginLeft: '8px'\n            },\n            children: changeText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-layout-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-iframe-container\",\n        children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n          // ticker가 변경될 때마다 iframe을 새로 로드하도록 key 추가\n          className: \"chart-iframe\",\n          src: chartIframeSrc,\n          title: `${stockName || ticker} Stock Chart`\n        }, ticker, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"AI \\uBD84\\uC11D (\", stockName || ticker, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleChartAnalysis,\n          children: \"\\uCC28\\uD2B8 \\uBD84\\uC11D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNewsSummary,\n          disabled: isLoadingSummaries,\n          children: isLoadingSummaries ? '요약 정보 로딩 중...' : '뉴스 요약'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleOtherAction,\n          children: \"\\uB2E4\\uB978 \\uAE30\\uB2A5 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), isLoadingSummaries && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uB274\\uC2A4 \\uC694\\uC57D \\uC815\\uBCF4\\uB97C \\uBD88\\uB7EC\\uC624\\uB294 \\uC911\\uC785\\uB2C8\\uB2E4...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 30\n    }, this), summaryError && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: [\"\\uC624\\uB958: \", summaryError]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 24\n    }, this), !isLoadingSummaries && summaries.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"news-summaries-section\",\n      style: {\n        marginTop: '20px',\n        padding: '10px',\n        border: '1px solid #eee'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"\\uB274\\uC2A4 \\uC694\\uC57D \\uACB0\\uACFC (\", stockName || ticker, \"):\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this), summaries.map((summary, index) => summary ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '15px',\n          paddingBottom: '10px',\n          borderBottom: '1px solid #ddd'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: summary.title || '제목 없음'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\uB0A0\\uC9DC:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 20\n          }, this), \" \", summary.date || '정보 없음']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\uC8FC\\uC694 \\uC774\\uC288:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 20\n          }, this), \" \", summary.issue || '정보 없음']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\uC601\\uD5A5:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 20\n          }, this), \" \", summary.impact || '정보 없음']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 17\n        }, this), summary.link && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: summary.link,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: \"\\uC6D0\\uBCF8 \\uAE30\\uC0AC \\uBCF4\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 34\n        }, this), summary.related_tickers && summary.related_tickers.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\uAD00\\uB828 \\uD2F0\\uCEE4:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 22\n          }, this), \" \", summary.related_tickers.join(', ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 19\n        }, this)]\n      }, summary.link || index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uC774 \\uD56D\\uBAA9\\uC5D0 \\uB300\\uD55C \\uC694\\uC57D \\uC815\\uBCF4\\uB97C \\uAC00\\uC838\\uC624\\uC9C0 \\uBABB\\uD588\\uC2B5\\uB2C8\\uB2E4.\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 15\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }, this), !isLoadingSummaries && !summaryError && summaries.length === 0 && ticker && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n}\n_s(ChartSection, \"IznVeKW6yR9wRLBEQg7ykxIj4FM=\");\n_c = ChartSection;\nvar _c;\n$RefreshReg$(_c, \"ChartSection\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ChartSection","ticker","stockName","stockPrice","stockChange","logoUrl","chartServerIp","_s","summaries","setSummaries","isLoadingSummaries","setIsLoadingSummaries","summaryError","setSummaryError","apiServerBaseUrl","handleChartAnalysis","console","log","handleNewsSummary","crawlerResponse","fetch","ok","errorData","text","Error","status","statusText","newsIdPathsObject","json","newsIdPaths","Object","values","length","summaryPromises","map","pathString","pathParts","split","newsId","trim","warn","Promise","resolve","fullSummaryUrl","then","res","errorBody","error","catch","err","fetchedSummaries","all","filter","summary","message","handleOtherAction","startDate","endDate","chartIframeSrc","className","children","fileName","_jsxFileName","lineNumber","columnNumber","changeClassName","changeText","toFixed","src","alt","onError","e","target","style","display","parent","parentNode","classList","contains","textContent","marginLeft","title","onClick","disabled","color","marginTop","padding","border","index","marginBottom","paddingBottom","borderBottom","date","issue","impact","link","href","rel","related_tickers","join","_c","$RefreshReg$"],"sources":["C:/Users/kimseungwoon/Desktop/REACT/Stock-Analysis-Ai/stock-analysis-ai-react/src/components/ChartSection.jsx"],"sourcesContent":["// ChartSection.jsx\r\nimport React, { useState } from 'react';\r\nimport './ChartSection.css'; // ChartSection.css에 positive/negative 스타일이 정의되어 있다고 가정\r\n\r\n// formatDate 함수 (사용되지 않으므로 유지하거나 필요시 제거)\r\n// const formatDate = (date) => {\r\n//   const year = date.getFullYear();\r\n//   const month = (date.getMonth() + 1).toString().padStart(2, '0');\r\n//   const day = date.getDate().toString().padStart(2, '0');\r\n//   return `${year}${month}${day}`;\r\n// };\r\n\r\nexport default function ChartSection({ ticker, stockName, stockPrice, stockChange, logoUrl, chartServerIp }) {\r\n  const [summaries, setSummaries] = useState([]);\r\n  const [isLoadingSummaries, setIsLoadingSummaries] = useState(false);\r\n  const [summaryError, setSummaryError] = useState(null);\r\n\r\n  // Flask API 서버의 기본 URL을 정확하게 설정해야 합니다.\r\n  const apiServerBaseUrl = 'http://minjun0410.iptime.org:5000';\r\n\r\n  const handleChartAnalysis = () => {\r\n    console.log(`차트 분석 버튼 클릭됨: ${ticker}`);\r\n  };\r\n\r\n  const handleNewsSummary = async () => {\r\n    if (!ticker) {\r\n      setSummaryError(\"종목 코드가 없습니다.\");\r\n      return;\r\n    }\r\n\r\n    console.log(`뉴스 요약 요청 시작: ${ticker}`);\r\n    setIsLoadingSummaries(true);\r\n    setSummaryError(null);\r\n    setSummaries([]);\r\n\r\n    try {\r\n      // 1. /crawler/<ticker> API를 호출하여 뉴스 ID가 포함된 경로 목록을 가져옵니다.\r\n      const crawlerResponse = await fetch(`${apiServerBaseUrl}/crawler/${ticker}`);\r\n      if (!crawlerResponse.ok) {\r\n        const errorData = await crawlerResponse.text(); // 또는 .json() 시도\r\n        throw new Error(`뉴스 목록을 가져오는데 실패했습니다: ${crawlerResponse.status} ${crawlerResponse.statusText} - ${errorData}`);\r\n      }\r\n      // 응답 예시: { \"0\": \"minjun0410.iptime.org:5000/getSummary/ID1\", \"1\": \"...\" }\r\n      const newsIdPathsObject = await crawlerResponse.json();\r\n      const newsIdPaths = Object.values(newsIdPathsObject); // 경로 문자열 배열로 변환\r\n\r\n      if (newsIdPaths.length === 0) {\r\n        console.log(\"요약할 뉴스가 없습니다.\");\r\n        setIsLoadingSummaries(false);\r\n        return;\r\n      }\r\n\r\n      console.log(\"가져온 뉴스 경로 목록:\", newsIdPaths);\r\n\r\n      // 2. 각 경로 문자열에서 ID를 추출하고, 해당 ID로 /getSummary/<id> API를 호출합니다.\r\n      const summaryPromises = newsIdPaths.map(pathString => {\r\n        // pathString 예시: \"minjun0410.iptime.org:5000/getSummary/000270_202505091133\"\r\n        // 여기서 마지막 부분인 뉴스 ID (예: \"000270_202505091133\")를 추출합니다.\r\n        const pathParts = pathString.split('/');\r\n        const newsId = pathParts[pathParts.length - 1];\r\n\r\n        if (!newsId || newsId.trim() === \"\") {\r\n            console.warn(\"잘못된 형식의 뉴스 ID 경로:\", pathString);\r\n            return Promise.resolve(null); // 유효하지 않은 ID는 건너뜁니다.\r\n        }\r\n        \r\n        // 추출한 newsId를 사용하여 뉴스 요약 정보를 가져오기 위한 전체 URL을 구성합니다.\r\n        const fullSummaryUrl = `${apiServerBaseUrl}/getSummary/${newsId}`;\r\n        console.log(`요약 요청 URL: ${fullSummaryUrl}`);\r\n\r\n        return fetch(fullSummaryUrl)\r\n          .then(async res => { // async 추가하여 에러 시 응답 바디 읽기\r\n            if (!res.ok) {\r\n              const errorBody = await res.text(); // 또는 .json() 시도\r\n              console.error(`ID [${newsId}]에 대한 요약을 가져오는데 실패했습니다: ${res.status} ${res.statusText} - ${errorBody}`);\r\n              return null; // 개별 요청 실패 시 null 반환\r\n            }\r\n            return res.json();\r\n          })\r\n          .catch(err => {\r\n            console.error(`ID [${newsId}] 요청 중 네트워크 또는 기타 오류:`, err);\r\n            return null;\r\n          });\r\n      });\r\n\r\n      // 모든 요약 요청이 완료될 때까지 기다린 후, null이 아닌 결과만 필터링합니다.\r\n      const fetchedSummaries = (await Promise.all(summaryPromises)).filter(summary => summary !== null);\r\n      \r\n      setSummaries(fetchedSummaries);\r\n      console.log(\"최종적으로 가져온 뉴스 요약:\", fetchedSummaries);\r\n\r\n    } catch (error) {\r\n      console.error(\"뉴스 요약 처리 중 최상위 오류:\", error);\r\n      setSummaryError(error.message);\r\n    } finally {\r\n      setIsLoadingSummaries(false);\r\n    }\r\n  };\r\n\r\n  const handleOtherAction = () => {\r\n    console.log(`다른 기능 버튼 클릭됨: ${ticker}`);\r\n  };\r\n\r\n  // 차트 관련 설정 (기존 코드 유지)\r\n  // const today = new Date();\r\n  const startDate = \"20000101\";\r\n  const endDate = \"20250423\";\r\n  const chartIframeSrc = `http://${chartServerIp}/chart/kr/${ticker}/${startDate}/${endDate}`;\r\n\r\n  if (!ticker) {\r\n    return (\r\n      <div className=\"chart-section\">\r\n        <p>종목 정보를 불러올 수 없습니다. 목록에서 종목을 선택해주세요.</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const changeClassName = stockChange >= 0 ? \"positive\" : \"negative\";\r\n  const changeText = `${stockChange >= 0 ? '+' : ''}${typeof stockChange === 'number' ? stockChange.toFixed(1) : 'N/A'}%`;\r\n\r\n  return (\r\n    <div className=\"chart-section\">\r\n      <div className=\"chart-header-info\">\r\n        {logoUrl ? (\r\n          <img\r\n            src={logoUrl}\r\n            alt={`${stockName || '종목'} 로고`}\r\n            className=\"image-placeholder\"\r\n            onError={(e) => {\r\n              e.target.style.display = 'none';\r\n              const parent = e.target.parentNode;\r\n              if (parent && parent.classList.contains('image-placeholder')) {\r\n                parent.textContent = '로고';\r\n              }\r\n            }}\r\n          />\r\n        ) : (\r\n          <div className=\"image-placeholder\">로고</div>\r\n        )}\r\n        <div className=\"stock-info-text\">\r\n          <span className=\"stock-name\">{stockName || ticker}</span>\r\n          <div className=\"stock-price-details\">\r\n            <span className=\"stock-price\">{stockPrice}</span>\r\n            {typeof stockChange === 'number' && (\r\n              <span className={`stock-change ${changeClassName}`} style={{ marginLeft: '8px' }}>\r\n                {changeText}\r\n              </span>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"chart-layout-container\">\r\n        <div className=\"chart-iframe-container\">\r\n          <iframe\r\n            key={ticker} // ticker가 변경될 때마다 iframe을 새로 로드하도록 key 추가\r\n            className=\"chart-iframe\"\r\n            src={chartIframeSrc}\r\n            title={`${stockName || ticker} Stock Chart`}\r\n          ></iframe>\r\n        </div>\r\n        <div className=\"chart-controls\">\r\n          <h3>AI 분석 ({stockName || ticker})</h3>\r\n          <button onClick={handleChartAnalysis}>차트 분석</button>\r\n          <button onClick={handleNewsSummary} disabled={isLoadingSummaries}>\r\n            {isLoadingSummaries ? '요약 정보 로딩 중...' : '뉴스 요약'}\r\n          </button>\r\n          <button onClick={handleOtherAction}>다른 기능 2</button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* 뉴스 요약 결과 표시 부분 */}\r\n      {isLoadingSummaries && <p>뉴스 요약 정보를 불러오는 중입니다...</p>}\r\n      {summaryError && <p style={{ color: 'red' }}>오류: {summaryError}</p>}\r\n      {!isLoadingSummaries && summaries.length > 0 && (\r\n        <div className=\"news-summaries-section\" style={{ marginTop: '20px', padding: '10px', border: '1px solid #eee' }}>\r\n          <h4>뉴스 요약 결과 ({stockName || ticker}):</h4>\r\n          {summaries.map((summary, index) => (\r\n            summary ? (\r\n              <div key={summary.link || index} style={{ marginBottom: '15px', paddingBottom: '10px', borderBottom: '1px solid #ddd' }}>\r\n                <h5>{summary.title || '제목 없음'}</h5>\r\n                <p><strong>날짜:</strong> {summary.date || '정보 없음'}</p>\r\n                <p><strong>주요 이슈:</strong> {summary.issue || '정보 없음'}</p>\r\n                <p><strong>영향:</strong> {summary.impact || '정보 없음'}</p>\r\n                {summary.link && <p><a href={summary.link} target=\"_blank\" rel=\"noopener noreferrer\">원본 기사 보기</a></p>}\r\n                {summary.related_tickers && summary.related_tickers.length > 0 && (\r\n                  <p><strong>관련 티커:</strong> {summary.related_tickers.join(', ')}</p>\r\n                )}\r\n              </div>\r\n            ) : (\r\n              <p key={index}>이 항목에 대한 요약 정보를 가져오지 못했습니다.</p>\r\n            )\r\n          ))}\r\n        </div>\r\n      )}\r\n      {!isLoadingSummaries && !summaryError && summaries.length === 0 && ticker && (\r\n         <div style={{ marginTop: '10px' }}>\r\n            {/* 이 메시지는 handleNewsSummary 함수에서 newsIdPaths.length === 0 일 때 또는 summaries가 비어있을 때 표시될 수 있습니다.\r\n                버튼이 클릭된 후 로딩이 끝났는데 summaries가 비어있고 에러도 없을 경우를 위한 메시지*/}\r\n         </div>\r\n      )}\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}