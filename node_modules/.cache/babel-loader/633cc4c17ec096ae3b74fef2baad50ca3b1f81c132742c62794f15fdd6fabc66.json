{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kimseungwoon\\\\Desktop\\\\REACT\\\\Stock-Analysis-Ai\\\\stock-analysis-ai-react\\\\src\\\\components\\\\StockTable.jsx\",\n  _s = $RefreshSig$();\n// StockTable.jsx\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport \"./StockTable.css\";\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function StockTable() {\n  _s();\n  const [currentPage, setCurrentPage] = useState(1);\n  const [allChartData, setAllChartData] = useState([]); // 서버에서 가져온 추천 종목 + 상세 정보\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentChangeRankData, setCurrentChangeRankData] = useState([]);\n  const [sortTypeForChangeRank, setSortTypeForChangeRank] = useState('initial'); // 'initial', 'gainers', 'losers'\n\n  const [chartMarketType, setChartMarketType] = useState('kr'); // 'kr' 또는 'us'로 차트 시장 구분\n\n  const ITEMS_PER_PAGE = 10;\n  const CHANGE_RANK_ITEMS_COUNT = 10;\n  const IP = \"172.17.153.62:8080\"; // 사용자 IP로 변경 필요\n\n  const navigate = useNavigate();\n  const fetchChartData = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    setAllChartData([]); // 이전 데이터 지우기\n    setCurrentChangeRankData([]); // 이전 순위 데이터 지우기\n    setCurrentPage(1); // ماركت 변경 시 페이지를 1로 리셋\n\n    try {\n      const listResponse = await fetch(`http://${IP}/recommend/${chartMarketType}`);\n      if (!listResponse.ok) {\n        throw new Error(`종목 목록 로딩 실패 (${chartMarketType.toUpperCase()}): ${listResponse.status}`);\n      }\n      const initialStockList = await listResponse.json();\n      if (!Array.isArray(initialStockList) || initialStockList.length === 0) {\n        console.log(`추천 종목 목록이 비어있습니다 (${chartMarketType.toUpperCase()}).`);\n        setAllChartData([]);\n        setCurrentChangeRankData([]);\n        setLoading(false);\n        return;\n      }\n      const detailPromises = initialStockList.map(async stock => {\n        if (!stock.ticker || !stock.stock_name) {\n          console.warn(\"종목 목록 데이터에 ticker 또는 stock_name이 없습니다:\", stock);\n          return {\n            name: stock.stock_name || \"이름 없음\",\n            ticker: stock.ticker || \"티커 없음\",\n            price: \"N/A\",\n            change: 0.0,\n            logo: `http://${IP}/logo/${chartMarketType}/${stock.ticker || 'default'}`\n          };\n        }\n        try {\n          const detailResponse = await fetch(`http://${IP}/changerate/${chartMarketType}/${stock.ticker}`);\n          if (!detailResponse.ok) {\n            console.warn(`티커 ${stock.ticker} (${chartMarketType.toUpperCase()}) 상세 정보 로딩 실패: ${detailResponse.status}`);\n            return {\n              name: stock.stock_name,\n              ticker: stock.ticker,\n              price: \"N/A\",\n              change: 0.0,\n              logo: `http://${IP}/logo/${chartMarketType}/${stock.ticker}`\n            };\n          }\n          const details = await detailResponse.json();\n          return {\n            name: stock.stock_name,\n            ticker: stock.ticker,\n            price: typeof details.yesterday_close === 'number' ? details.yesterday_close : \"N/A\",\n            change: typeof details.change_rate === 'number' ? details.change_rate : 0.0,\n            logo: `http://${IP}/logo/${chartMarketType}/${stock.ticker}`\n          };\n        } catch (e) {\n          console.error(`티커 ${stock.ticker} (${chartMarketType.toUpperCase()}) 상세 정보 fetch 또는 처리 중 오류:`, e);\n          return {\n            name: stock.stock_name,\n            ticker: stock.ticker,\n            price: \"N/A\",\n            change: 0.0,\n            logo: `http://${IP}/logo/${chartMarketType}/${stock.ticker}`\n          };\n        }\n      });\n      const combinedDataResults = await Promise.allSettled(detailPromises);\n      const finalChartData = combinedDataResults.filter(result => result.status === 'fulfilled').map(result => result.value);\n      setAllChartData(finalChartData);\n      if (finalChartData.length > 0) {\n        const initiallySortedChangeData = [...finalChartData].sort((a, b) => Math.abs(b.change) - Math.abs(a.change)).slice(0, CHANGE_RANK_ITEMS_COUNT);\n        setCurrentChangeRankData(initiallySortedChangeData);\n      } else {\n        setCurrentChangeRankData([]);\n      }\n      setSortTypeForChangeRank('initial');\n    } catch (e) {\n      console.error(`차트 데이터 로딩 중 전체 오류 발생 (${chartMarketType.toUpperCase()}):`, e);\n      setError(`데이터 로딩 실패: ${e.message}`);\n      setAllChartData([]);\n      setCurrentChangeRankData([]);\n    } finally {\n      setLoading(false);\n    }\n  }, [IP, CHANGE_RANK_ITEMS_COUNT, chartMarketType]); // chartMarketType 의존성 추가\n\n  useEffect(() => {\n    fetchChartData();\n  }, [fetchChartData]); // fetchChartData는 chartMarketType에 의존\n\n  const handleChartMarketTypeChange = type => {\n    if (chartMarketType !== type) {\n      setChartMarketType(type);\n      // useEffect가 chartMarketType 변경을 감지하고 fetchChartData를 다시 호출합니다.\n    }\n  };\n\n  // 변동순 정렬 함수\n  const handleSortChangeRank = type => {\n    if (!allChartData || allChartData.length === 0) {\n      console.log(\"정렬할 차트 데이터가 없습니다.\");\n      setCurrentChangeRankData([]);\n      setSortTypeForChangeRank(type);\n      return;\n    }\n    let sortedData = [...allChartData];\n    if (type === 'gainers') {\n      sortedData.sort((a, b) => b.change - a.change);\n    } else if (type === 'losers') {\n      sortedData.sort((a, b) => a.change - b.change);\n    } else {\n      sortedData.sort((a, b) => Math.abs(b.change) - Math.abs(a.change));\n    }\n    setCurrentChangeRankData(sortedData.slice(0, CHANGE_RANK_ITEMS_COUNT));\n    setSortTypeForChangeRank(type);\n  };\n  const totalPages = Math.ceil(allChartData.length / ITEMS_PER_PAGE);\n  const startIndex = (currentPage - 1) * ITEMS_PER_PAGE;\n  const endIndex = startIndex + ITEMS_PER_PAGE;\n  const currentChartPageData = allChartData.slice(startIndex, endIndex);\n  const handleFavoriteClick = (e, stockName) => {\n    e.stopPropagation();\n    console.log(`${stockName} 찜 상태 변경됨`);\n  };\n  const handlePageChange = page => {\n    if (page === 'prev') setCurrentPage(prev => Math.max(prev - 1, 1));else if (page === 'next') setCurrentPage(prev => Math.min(prev + 1, totalPages));else setCurrentPage(page);\n  };\n  const handleStockRowClick = stock => {\n    if (stock && stock.ticker && stock.ticker !== \"티커 없음\" && stock.ticker !== \"오류\") {\n      const priceToSend = typeof stock.price === 'number' ? stock.price : \"N/A\";\n      const changeToSend = typeof stock.change === 'number' ? stock.change : 0.0;\n      navigate(`/chart/${stock.ticker}`, {\n        // Ticker는 시장에 따라 고유해야 함\n        state: {\n          stockName: stock.name,\n          stockPrice: priceToSend,\n          stockChange: changeToSend,\n          marketType: chartMarketType // 선택적으로 chart 페이지에 marketType 전달 가능\n        }\n      });\n    } else {\n      console.warn(\"유효하지 않은 종목 정보로 차트 페이지로 이동할 수 없습니다:\", stock);\n    }\n  };\n  const renderPageNumbers = () => {\n    const pageNumbers = [];\n    const maxPagesToShow = 5;\n    if (totalPages <= maxPagesToShow + 1) {\n      for (let i = 1; i <= totalPages; i++) pageNumbers.push(/*#__PURE__*/_jsxDEV(\"button\", {\n        className: i === currentPage ? 'active' : '',\n        onClick: () => handlePageChange(i),\n        children: i\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 68\n      }, this));\n    } else {\n      let startPage = Math.max(1, currentPage - Math.floor(maxPagesToShow / 2));\n      let endPage = Math.min(totalPages, startPage + maxPagesToShow - 1);\n      if (endPage === totalPages) startPage = Math.max(1, totalPages - maxPagesToShow + 1);\n      if (startPage > 1) {\n        pageNumbers.push(/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handlePageChange(1),\n          children: \"1\"\n        }, 1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 34\n        }, this));\n        if (startPage > 2) pageNumbers.push(/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"...\"\n        }, \"start-ellipsis\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 53\n        }, this));\n      }\n      for (let i = startPage; i <= endPage; i++) pageNumbers.push(/*#__PURE__*/_jsxDEV(\"button\", {\n        className: i === currentPage ? 'active' : '',\n        onClick: () => handlePageChange(i),\n        children: i\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 73\n      }, this));\n      if (endPage < totalPages) {\n        if (endPage < totalPages - 1) pageNumbers.push(/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"...\"\n        }, \"end-ellipsis\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 64\n        }, this));\n        pageNumbers.push(/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handlePageChange(totalPages),\n          children: totalPages\n        }, totalPages, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 34\n        }, this));\n      }\n    }\n    return pageNumbers;\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stock-table loading\",\n    children: \"\\uB370\\uC774\\uD130\\uB97C \\uBD88\\uB7EC\\uC624\\uB294 \\uC911\\uC785\\uB2C8\\uB2E4...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stock-table error\",\n    children: [\"\\uC624\\uB958: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stock-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uCC28\\uD2B8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-market-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleChartMarketTypeChange('kr'),\n          className: chartMarketType === 'kr' ? 'active-sort' : '',\n          children: \"KR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleChartMarketTypeChange('us'),\n          className: chartMarketType === 'us' ? 'active-sort' : '',\n          children: \"US\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flexGrow: 1,\n            overflowY: 'auto',\n            position: 'relative'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"rank-header\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"\\uC885\\uBAA9\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"\\uD604\\uC7AC\\uAC00\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"\\uB4F1\\uB77D\\uB960\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"favorite-header\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: currentChartPageData.map((stock, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"stock-row\",\n                onClick: () => handleStockRowClick(stock),\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"rank-cell\",\n                  children: (currentPage - 1) * ITEMS_PER_PAGE + index + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"stock-name-cell\",\n                  children: [stock.ticker && stock.ticker !== \"티커 없음\" && stock.ticker !== \"오류\" && /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: stock.logo // fetchChartData에서 marketType에 따라 설정된 로고 사용\n                    ,\n                    alt: `${stock.name} 로고`,\n                    className: \"stock-logo\",\n                    onError: e => {\n                      e.target.style.display = 'none';\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 225,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: stock.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: typeof stock.price === 'number' ? `${stock.price.toLocaleString(chartMarketType === 'kr' ? 'ko-KR' : 'en-US')}${chartMarketType === 'kr' ? '원' : '$'}` : stock.price\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: stock.change >= 0 ? \"positive\" : \"negative\",\n                  children: [stock.change >= 0 ? '+' : '', stock.change.toFixed(1), \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"favorite-cell\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"favorite-icon\",\n                    onClick: e => handleFavoriteClick(e, stock.name),\n                    title: `${stock.name} 찜하기`,\n                    children: \"\\u2665\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 41\n                }, this)]\n              }, stock.ticker || stock.name, true, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this), totalPages > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pagination-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handlePageChange('prev'),\n            disabled: currentPage === 1,\n            children: \"<\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 29\n          }, this), renderPageNumbers(), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handlePageChange('next'),\n            disabled: currentPage === totalPages,\n            children: \">\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vertical-line\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"change-rank\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"change-rank-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"title-2\",\n            children: \"\\uBCC0\\uB3D9 \\uC21C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"change-rank-controls\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleSortChangeRank('gainers'),\n              className: sortTypeForChangeRank === 'gainers' ? 'active-sort' : '',\n              children: \"\\uC0C1\\uC2B9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleSortChangeRank('losers'),\n              className: sortTypeForChangeRank === 'losers' ? 'active-sort' : '',\n              children: \"\\uD558\\uB77D\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\uC885\\uBAA9\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\uB4F1\\uB77D\\uB960\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 44\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"favorite-header\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 56\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: currentChangeRankData.map(stock => /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"stock-row\",\n              onClick: () => handleStockRowClick(stock),\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"stock-name-cell\",\n                children: [stock.ticker && /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: stock.logo // fetchChartData에서 marketType에 따라 설정된 로고 사용\n                  ,\n                  alt: `${stock.name} 로고`,\n                  className: \"stock-logo\",\n                  onError: e => {\n                    e.target.style.display = 'none';\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: stock.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: stock.change >= 0 ? \"positive\" : \"negative\",\n                children: [stock.change >= 0 ? '+' : '', stock.change.toFixed(1), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"favorite-cell\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"favorite-icon\",\n                  onClick: e => handleFavoriteClick(e, stock.name),\n                  title: `${stock.name} 찜하기`,\n                  children: \"\\u2665\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 37\n              }, this)]\n            }, stock.ticker || stock.name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 9\n  }, this);\n}\n_s(StockTable, \"sxVKa6XsKUuix9rUHqocifvLySI=\", false, function () {\n  return [useNavigate];\n});\n_c = StockTable;\nvar _c;\n$RefreshReg$(_c, \"StockTable\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","jsxDEV","_jsxDEV","StockTable","_s","currentPage","setCurrentPage","allChartData","setAllChartData","loading","setLoading","error","setError","currentChangeRankData","setCurrentChangeRankData","sortTypeForChangeRank","setSortTypeForChangeRank","chartMarketType","setChartMarketType","ITEMS_PER_PAGE","CHANGE_RANK_ITEMS_COUNT","IP","navigate","fetchChartData","listResponse","fetch","ok","Error","toUpperCase","status","initialStockList","json","Array","isArray","length","console","log","detailPromises","map","stock","ticker","stock_name","warn","name","price","change","logo","detailResponse","details","yesterday_close","change_rate","e","combinedDataResults","Promise","allSettled","finalChartData","filter","result","value","initiallySortedChangeData","sort","a","b","Math","abs","slice","message","handleChartMarketTypeChange","type","handleSortChangeRank","sortedData","totalPages","ceil","startIndex","endIndex","currentChartPageData","handleFavoriteClick","stockName","stopPropagation","handlePageChange","page","prev","max","min","handleStockRowClick","priceToSend","changeToSend","state","stockPrice","stockChange","marketType","renderPageNumbers","pageNumbers","maxPagesToShow","i","push","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","startPage","floor","endPage","style","flexGrow","overflowY","position","index","src","alt","onError","target","display","toLocaleString","toFixed","title","disabled","_c","$RefreshReg$"],"sources":["C:/Users/kimseungwoon/Desktop/REACT/Stock-Analysis-Ai/stock-analysis-ai-react/src/components/StockTable.jsx"],"sourcesContent":["// StockTable.jsx\r\nimport React, { useState, useEffect, useCallback } from \"react\";\r\nimport \"./StockTable.css\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport default function StockTable() {\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [allChartData, setAllChartData] = useState([]); // 서버에서 가져온 추천 종목 + 상세 정보\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    const [currentChangeRankData, setCurrentChangeRankData] = useState([]);\r\n    const [sortTypeForChangeRank, setSortTypeForChangeRank] = useState('initial'); // 'initial', 'gainers', 'losers'\r\n\r\n    const [chartMarketType, setChartMarketType] = useState('kr'); // 'kr' 또는 'us'로 차트 시장 구분\r\n\r\n    const ITEMS_PER_PAGE = 10;\r\n    const CHANGE_RANK_ITEMS_COUNT = 10;\r\n    const IP = \"172.17.153.62:8080\"; // 사용자 IP로 변경 필요\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const fetchChartData = useCallback(async () => {\r\n        setLoading(true);\r\n        setError(null);\r\n        setAllChartData([]); // 이전 데이터 지우기\r\n        setCurrentChangeRankData([]); // 이전 순위 데이터 지우기\r\n        setCurrentPage(1); // ماركت 변경 시 페이지를 1로 리셋\r\n\r\n        try {\r\n            const listResponse = await fetch(`http://${IP}/recommend/${chartMarketType}`);\r\n            if (!listResponse.ok) {\r\n                throw new Error(`종목 목록 로딩 실패 (${chartMarketType.toUpperCase()}): ${listResponse.status}`);\r\n            }\r\n            const initialStockList = await listResponse.json();\r\n\r\n            if (!Array.isArray(initialStockList) || initialStockList.length === 0) {\r\n                console.log(`추천 종목 목록이 비어있습니다 (${chartMarketType.toUpperCase()}).`);\r\n                setAllChartData([]);\r\n                setCurrentChangeRankData([]);\r\n                setLoading(false);\r\n                return;\r\n            }\r\n\r\n            const detailPromises = initialStockList.map(async (stock) => {\r\n                if (!stock.ticker || !stock.stock_name) {\r\n                    console.warn(\"종목 목록 데이터에 ticker 또는 stock_name이 없습니다:\", stock);\r\n                    return { name: stock.stock_name || \"이름 없음\", ticker: stock.ticker || \"티커 없음\", price: \"N/A\", change: 0.0, logo: `http://${IP}/logo/${chartMarketType}/${stock.ticker || 'default'}` };\r\n                }\r\n                try {\r\n                    const detailResponse = await fetch(`http://${IP}/changerate/${chartMarketType}/${stock.ticker}`);\r\n                    if (!detailResponse.ok) {\r\n                        console.warn(`티커 ${stock.ticker} (${chartMarketType.toUpperCase()}) 상세 정보 로딩 실패: ${detailResponse.status}`);\r\n                        return { name: stock.stock_name, ticker: stock.ticker, price: \"N/A\", change: 0.0, logo: `http://${IP}/logo/${chartMarketType}/${stock.ticker}` };\r\n                    }\r\n                    const details = await detailResponse.json();\r\n                    return {\r\n                        name: stock.stock_name,\r\n                        ticker: stock.ticker,\r\n                        price: typeof details.yesterday_close === 'number' ? details.yesterday_close : \"N/A\",\r\n                        change: typeof details.change_rate === 'number' ? details.change_rate : 0.0,\r\n                        logo: `http://${IP}/logo/${chartMarketType}/${stock.ticker}`,\r\n                    };\r\n                } catch (e) {\r\n                    console.error(`티커 ${stock.ticker} (${chartMarketType.toUpperCase()}) 상세 정보 fetch 또는 처리 중 오류:`, e);\r\n                    return { name: stock.stock_name, ticker: stock.ticker, price: \"N/A\", change: 0.0, logo: `http://${IP}/logo/${chartMarketType}/${stock.ticker}` };\r\n                }\r\n            });\r\n\r\n            const combinedDataResults = await Promise.allSettled(detailPromises);\r\n            const finalChartData = combinedDataResults\r\n                .filter(result => result.status === 'fulfilled')\r\n                .map(result => result.value);\r\n\r\n            setAllChartData(finalChartData);\r\n\r\n            if (finalChartData.length > 0) {\r\n                const initiallySortedChangeData = [...finalChartData]\r\n                    .sort((a, b) => Math.abs(b.change) - Math.abs(a.change))\r\n                    .slice(0, CHANGE_RANK_ITEMS_COUNT);\r\n                setCurrentChangeRankData(initiallySortedChangeData);\r\n            } else {\r\n                setCurrentChangeRankData([]);\r\n            }\r\n            setSortTypeForChangeRank('initial');\r\n\r\n        } catch (e) {\r\n            console.error(`차트 데이터 로딩 중 전체 오류 발생 (${chartMarketType.toUpperCase()}):`, e);\r\n            setError(`데이터 로딩 실패: ${e.message}`);\r\n            setAllChartData([]);\r\n            setCurrentChangeRankData([]);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [IP, CHANGE_RANK_ITEMS_COUNT, chartMarketType]); // chartMarketType 의존성 추가\r\n\r\n    useEffect(() => {\r\n        fetchChartData();\r\n    }, [fetchChartData]); // fetchChartData는 chartMarketType에 의존\r\n\r\n    const handleChartMarketTypeChange = (type) => {\r\n        if (chartMarketType !== type) {\r\n            setChartMarketType(type);\r\n            // useEffect가 chartMarketType 변경을 감지하고 fetchChartData를 다시 호출합니다.\r\n        }\r\n    };\r\n\r\n    // 변동순 정렬 함수\r\n    const handleSortChangeRank = (type) => {\r\n        if (!allChartData || allChartData.length === 0) {\r\n            console.log(\"정렬할 차트 데이터가 없습니다.\");\r\n            setCurrentChangeRankData([]);\r\n            setSortTypeForChangeRank(type);\r\n            return;\r\n        }\r\n        let sortedData = [...allChartData];\r\n        if (type === 'gainers') {\r\n            sortedData.sort((a, b) => b.change - a.change);\r\n        } else if (type === 'losers') {\r\n            sortedData.sort((a, b) => a.change - b.change);\r\n        } else {\r\n            sortedData.sort((a, b) => Math.abs(b.change) - Math.abs(a.change));\r\n        }\r\n        setCurrentChangeRankData(sortedData.slice(0, CHANGE_RANK_ITEMS_COUNT));\r\n        setSortTypeForChangeRank(type);\r\n    };\r\n\r\n    const totalPages = Math.ceil(allChartData.length / ITEMS_PER_PAGE);\r\n    const startIndex = (currentPage - 1) * ITEMS_PER_PAGE;\r\n    const endIndex = startIndex + ITEMS_PER_PAGE;\r\n    const currentChartPageData = allChartData.slice(startIndex, endIndex);\r\n\r\n    const handleFavoriteClick = (e, stockName) => {\r\n        e.stopPropagation();\r\n        console.log(`${stockName} 찜 상태 변경됨`);\r\n    };\r\n\r\n    const handlePageChange = (page) => {\r\n        if (page === 'prev') setCurrentPage((prev) => Math.max(prev - 1, 1));\r\n        else if (page === 'next') setCurrentPage((prev) => Math.min(prev + 1, totalPages));\r\n        else setCurrentPage(page);\r\n    };\r\n\r\n    const handleStockRowClick = (stock) => {\r\n        if (stock && stock.ticker && stock.ticker !== \"티커 없음\" && stock.ticker !== \"오류\") {\r\n            const priceToSend = typeof stock.price === 'number' ? stock.price : \"N/A\";\r\n            const changeToSend = typeof stock.change === 'number' ? stock.change : 0.0;\r\n            navigate(`/chart/${stock.ticker}`, { // Ticker는 시장에 따라 고유해야 함\r\n                state: {\r\n                    stockName: stock.name,\r\n                    stockPrice: priceToSend,\r\n                    stockChange: changeToSend,\r\n                    marketType: chartMarketType // 선택적으로 chart 페이지에 marketType 전달 가능\r\n                }\r\n            });\r\n        } else {\r\n            console.warn(\"유효하지 않은 종목 정보로 차트 페이지로 이동할 수 없습니다:\", stock);\r\n        }\r\n    };\r\n\r\n    const renderPageNumbers = () => {\r\n        const pageNumbers = [];\r\n        const maxPagesToShow = 5;\r\n        if (totalPages <= maxPagesToShow + 1) {\r\n            for (let i = 1; i <= totalPages; i++) pageNumbers.push(<button key={i} className={i === currentPage ? 'active' : ''} onClick={() => handlePageChange(i)}>{i}</button>);\r\n        } else {\r\n            let startPage = Math.max(1, currentPage - Math.floor(maxPagesToShow / 2));\r\n            let endPage = Math.min(totalPages, startPage + maxPagesToShow - 1);\r\n            if (endPage === totalPages) startPage = Math.max(1, totalPages - maxPagesToShow + 1);\r\n            if (startPage > 1) {\r\n                pageNumbers.push(<button key={1} onClick={() => handlePageChange(1)}>1</button>);\r\n                if (startPage > 2) pageNumbers.push(<span key=\"start-ellipsis\">...</span>);\r\n            }\r\n            for (let i = startPage; i <= endPage; i++) pageNumbers.push(<button key={i} className={i === currentPage ? 'active' : ''} onClick={() => handlePageChange(i)}>{i}</button>);\r\n            if (endPage < totalPages) {\r\n                if (endPage < totalPages - 1) pageNumbers.push(<span key=\"end-ellipsis\">...</span>);\r\n                pageNumbers.push(<button key={totalPages} onClick={() => handlePageChange(totalPages)}>{totalPages}</button>);\r\n            }\r\n        }\r\n        return pageNumbers;\r\n    };\r\n\r\n    if (loading) return <div className=\"stock-table loading\">데이터를 불러오는 중입니다...</div>;\r\n    if (error) return <div className=\"stock-table error\">오류: {error}</div>;\r\n\r\n    return (\r\n        <div className=\"stock-table\">\r\n            <div className=\"chart-header\">\r\n                <h2>차트</h2>\r\n                <div className=\"chart-market-controls\">\r\n                    <button\r\n                        onClick={() => handleChartMarketTypeChange('kr')}\r\n                        className={chartMarketType === 'kr' ? 'active-sort' : ''}\r\n                    >\r\n                        KR\r\n                    </button>\r\n                    <button\r\n                        onClick={() => handleChartMarketTypeChange('us')}\r\n                        className={chartMarketType === 'us' ? 'active-sort' : ''}\r\n                    >\r\n                        US\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"table-container\">\r\n                <div className=\"chart-table\">\r\n                    <div style={{ flexGrow: 1, overflowY: 'auto', position: 'relative' }}>\r\n                        <table>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th className=\"rank-header\"></th>\r\n                                    <th>종목</th>\r\n                                    <th>현재가</th>\r\n                                    <th>등락률</th>\r\n                                    <th className=\"favorite-header\"></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {currentChartPageData.map((stock, index) => (\r\n                                    <tr key={stock.ticker || stock.name} className=\"stock-row\" onClick={() => handleStockRowClick(stock)}>\r\n                                        <td className=\"rank-cell\">{(currentPage - 1) * ITEMS_PER_PAGE + index + 1}</td>\r\n                                        <td className=\"stock-name-cell\">\r\n                                            {stock.ticker && stock.ticker !== \"티커 없음\" && stock.ticker !== \"오류\" && (\r\n                                                <img\r\n                                                    src={stock.logo} // fetchChartData에서 marketType에 따라 설정된 로고 사용\r\n                                                    alt={`${stock.name} 로고`}\r\n                                                    className=\"stock-logo\"\r\n                                                    onError={(e) => { e.target.style.display = 'none'; }}\r\n                                                />\r\n                                            )}\r\n                                            <span>{stock.name}</span>\r\n                                        </td>\r\n                                        <td>\r\n                                            {typeof stock.price === 'number'\r\n                                                ? `${stock.price.toLocaleString(chartMarketType === 'kr' ? 'ko-KR' : 'en-US')}${chartMarketType === 'kr' ? '원' : '$'}`\r\n                                                : stock.price}\r\n                                        </td>\r\n                                        <td className={stock.change >= 0 ? \"positive\" : \"negative\"}>\r\n                                            {stock.change >= 0 ? '+' : ''}{stock.change.toFixed(1)}%\r\n                                        </td>\r\n                                        <td className=\"favorite-cell\">\r\n                                            <span className=\"favorite-icon\" onClick={(e) => handleFavoriteClick(e, stock.name)} title={`${stock.name} 찜하기`}>♥</span>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    {totalPages > 1 && (\r\n                        <div className=\"pagination-controls\">\r\n                            <button onClick={() => handlePageChange('prev')} disabled={currentPage === 1}>&lt;</button>\r\n                            {renderPageNumbers()}\r\n                            <button onClick={() => handlePageChange('next')} disabled={currentPage === totalPages}>&gt;</button>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n\r\n                <div className=\"vertical-line\"></div>\r\n\r\n                <div className=\"change-rank\">\r\n                    <div className=\"change-rank-header\">\r\n                        <h2 className=\"title-2\">변동 순</h2>\r\n                        <div className=\"change-rank-controls\">\r\n                            <button\r\n                                onClick={() => handleSortChangeRank('gainers')}\r\n                                className={sortTypeForChangeRank === 'gainers' ? 'active-sort' : ''}\r\n                            >\r\n                                상승\r\n                            </button>\r\n                            <button\r\n                                onClick={() => handleSortChangeRank('losers')}\r\n                                className={sortTypeForChangeRank === 'losers' ? 'active-sort' : ''}\r\n                            >\r\n                                하락\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <table>\r\n                        <thead>\r\n                            <tr><th>종목</th><th>등락률</th><th className=\"favorite-header\"></th></tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {currentChangeRankData.map((stock) => (\r\n                                <tr key={stock.ticker || stock.name} className=\"stock-row\" onClick={() => handleStockRowClick(stock)}>\r\n                                    <td className=\"stock-name-cell\">\r\n                                        {stock.ticker && (\r\n                                            <img\r\n                                                src={stock.logo} // fetchChartData에서 marketType에 따라 설정된 로고 사용\r\n                                                alt={`${stock.name} 로고`}\r\n                                                className=\"stock-logo\"\r\n                                                onError={(e) => { e.target.style.display = 'none'; }}\r\n                                            />\r\n                                        )}\r\n                                        <span>{stock.name}</span>\r\n                                    </td>\r\n                                    <td className={stock.change >= 0 ? \"positive\" : \"negative\"}>\r\n                                        {stock.change >= 0 ? '+' : ''}{stock.change.toFixed(1)}%\r\n                                    </td>\r\n                                    <td className=\"favorite-cell\">\r\n                                        <span className=\"favorite-icon\" onClick={(e) => handleFavoriteClick(e, stock.name)} title={`${stock.name} 찜하기`}>♥</span>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}